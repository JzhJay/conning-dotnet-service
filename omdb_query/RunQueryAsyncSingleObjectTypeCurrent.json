[
    {
      $addFields: {
        __typename: "Simulation"
      }
    },
    {
      $match: {
        $or: [
          {
            isLink: {
              $exists: false
            }
          },
          {
            isLink: false
          }
        ]
      }
    },
    {
      $addFields: {
        isFavorite: false
      }
    },
    {
      $sort: {
        isFavorite: -1
      }
    },
    {
      $addFields: {
        _sort_modifiedTime: "$modifiedTime"
      }
    },
    {
      $sort: {
        _sort_modifiedTime: -1
      }
    },
    {
      $addFields:
        /**
         * newField: The new field name.
         * expression: The new field expression.
         */
        {
          _idString: {
            $toString: "$_id"
          }
        }
    },
    {
      $lookup:
        /**
         * from: The target collection.
         * localField: The local join field.
         * foreignField: The target join field.
         * as: The name for the results.
         * pipeline: Optional pipeline to run on the foreign collection.
         * let: Optional variables to use in the pipeline field stages.
         */
        {
          from: "UserTagValue",
          localField: "userTagValues",
          foreignField: "_id",
          as: "userTagValuesResolved"
        }
    },
    {
      $group: {
        _id: {
          $cond: [
            {
              $gt: [
                {
                  $size: {
                    $split: ["$name", "/"]
                  }
                },
                1
              ]
            },
            {
              $arrayElemAt: [
                {
                  $split: ["$name", "/"]
                },
                0
              ]
            },
            "$_id"
          ]
        },
        result: {
          $mergeObjects: "$$ROOT"
        },
        numObjects: {
          $sum: 1
        },
        createdTime: {
          $max: "$createdTime"
        },
        modifiedTime: {
          $max: "$modifiedTime"
        }
      }
    },
    {
      $replaceRoot: {
        newRoot: {
          $cond: [
            {
              $or: [
                {
                  $gt: ["$numObjects", 1]
                },
                {
                  $ne: ["$_id", "$result._id"]
                }
              ]
            },
            {
              $mergeObjects: [
                "$$ROOT",
                {
                  name: "$_id",
                  _isObjectFolder: true,
                  createdTime: "$createdTime",
                  modifiedTime: "$modifiedTime"
                }
              ]
            },
            {
              $mergeObjects: ["$$ROOT", "$result"]
            }
          ]
        }
      }
    },
    {
      $sort: {
        _isObjectFolder: -1
      }
    },
    {
      $facet: {
        results: [
          {
            $skip: 0
          },
          {
            $limit: 20
          }
        ],
        totalCount: [
          {
            $count: "count"
          }
        ]
      }
    }
  ]