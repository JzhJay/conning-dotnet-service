import{__assign}from"tslib";import{RegionCardinality,Regions}from"../../regions";import*as Errors from"../errors";export function getFocusedOrLastSelectedIndex(e,o){return 0===e.length?void 0:null!=o?o.focusSelectionIndex:e.length-1}export function getInitialFocusedCell(e,o,n,r){if(e){if(null!=o)return o;if(null!=n)return n;if(r.length>0){var i=r.length-1;return __assign(__assign({},Regions.getFocusCellCoordinatesFromRegion(r[i])),{focusSelectionIndex:i})}return{col:0,row:0,focusSelectionIndex:0}}}export function isFocusedCellAtRegionTop(e,o){return null!=e.rows&&o.row===e.rows[0]}export function isFocusedCellAtRegionBottom(e,o){return null!=e.rows&&o.row===e.rows[1]}export function isFocusedCellAtRegionLeft(e,o){return null!=e.cols&&o.col===e.cols[0]}export function isFocusedCellAtRegionRight(e,o){return null!=e.cols&&o.col===e.cols[1]}export function toFullCoordinates(e,o){return void 0===o&&(o=0),__assign(__assign({},e),{focusSelectionIndex:o})}export function expandFocusedRegion(e,o){switch(Regions.getRegionCardinality(o)){case RegionCardinality.FULL_COLUMNS:var n=getExpandedRegionIndices(e,o,"col","cols"),r=n[0],i=n[1];return Regions.column(r,i);case RegionCardinality.FULL_ROWS:var t=getExpandedRegionIndices(e,o,"row","rows");return r=t[0],i=t[1],Regions.row(r,i);case RegionCardinality.CELLS:var s=getExpandedRegionIndices(e,o,"row","rows"),l=s[0],c=s[1],u=getExpandedRegionIndices(e,o,"col","cols"),g=u[0],d=u[1];return Regions.cell(l,g,c,d);default:return Regions.table()}}function getExpandedRegionIndices(e,o,n,r){var i=e[n],t=o[r],s=t[0];if(s!==t[1]){if("rows"===r)throw new Error(Errors.TABLE_EXPAND_FOCUSED_REGION_MULTI_ROW_REGION);if("cols"===r)throw new Error(Errors.TABLE_EXPAND_FOCUSED_REGION_MULTI_COLUMN_REGION)}return i<=s?[i,s]:[s,i]}