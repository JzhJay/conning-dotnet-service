import{__assign,__extends}from"tslib";import classNames from"classnames";import*as React from"react";import{Classes as CoreClasses,DISPLAYNAME_PREFIX,Utils as CoreUtils}from"@blueprintjs/core";import*as Classes from"../common/classes";import{LoadableContent}from"../common/loadableContent";import{JSONFormat}from"./formats/jsonFormat";import{TruncatedFormat}from"./formats/truncatedFormat";export var emptyCellRenderer=function(){return React.createElement(Cell,null)};var Cell=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.shouldComponentUpdate=function(e){return!CoreUtils.shallowCompareKeys(this.props,e,{exclude:["style"]})||!CoreUtils.deepCompareKeys(this.props.style,e.style)},t.prototype.render=function(){var e,t,s=this.props,a=s.cellRef,r=s.tabIndex,o=s.onKeyDown,l=s.onKeyUp,n=s.onKeyPress,i=s.style,m=s.intent,p=s.interactive,c=s.loading,C=s.tooltip,d=s.truncated,E=s.className,u=s.wrapText,f=classNames(Classes.TABLE_CELL,CoreClasses.intentClass(m),((e={})[Classes.TABLE_CELL_INTERACTIVE]=p,e[CoreClasses.LOADING]=c,e[Classes.TABLE_TRUNCATED_CELL]=d,e),E),T=classNames(((t={})[Classes.TABLE_TRUNCATED_TEXT]=d,t[Classes.TABLE_NO_WRAP_TEXT]=!u,t)),y=React.Children.map(this.props.children,(function(e){var t=CoreUtils.isElementOfType(e,TruncatedFormat)||CoreUtils.isElementOfType(e,JSONFormat);return null!=i&&React.isValidElement(e)&&t?React.cloneElement(e,{parentCellHeight:parseInt(i.height.toString(),10),parentCellWidth:parseInt(i.width.toString(),10)}):e})),_=React.createElement("div",{className:T},y);return React.createElement("div",__assign({className:f,title:C,ref:a},{style:i,tabIndex:r,onKeyDown:o,onKeyUp:l,onKeyPress:n}),React.createElement(LoadableContent,{loading:c,variableLength:!0},_))},t.displayName=DISPLAYNAME_PREFIX+".Cell",t.defaultProps={truncated:!0,wrapText:!1},t}(React.Component);export{Cell};