import{__assign,__decorate,__extends,__rest}from"tslib";import classNames from"classnames";import*as React from"react";import{polyfill}from"react-lifecycles-compat";import{AbstractPureComponent2,Icon,Popover,Position,Utils as CoreUtils}from"@blueprintjs/core";import*as Classes from"../common/classes";import{columnInteractionBarContextTypes}from"../common/context";import{LoadableContent}from"../common/loadableContent";import{CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT}from"../common/utils";import{HeaderCell}from"./headerCell";export function HorizontalCellDivider(){return React.createElement("div",{className:Classes.TABLE_HORIZONTAL_CELL_DIVIDER})}var ColumnHeaderCell=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={isActive:!1},t.handlePopoverOpened=function(){return t.setState({isActive:!0})},t.handlePopoverClosing=function(){return t.setState({isActive:!1})},t}return __extends(t,e),t.isHeaderMouseTarget=function(e){return e.classList.contains(Classes.TABLE_HEADER)||e.classList.contains(Classes.TABLE_COLUMN_NAME)||e.classList.contains(Classes.TABLE_INTERACTION_BAR)||e.classList.contains(Classes.TABLE_HEADER_CONTENT)},t.prototype.render=function(){var e,t=this.props,s=(t.enableColumnReordering,t.isColumnSelected,t.menuIcon,t.name,t.nameRenderer,__rest(t,["enableColumnReordering","isColumnSelected","menuIcon","name","nameRenderer"])),n=classNames(s.className,Classes.TABLE_COLUMN_HEADER_CELL,((e={})[Classes.TABLE_HAS_INTERACTION_BAR]=this.context.enableColumnInteractionBar,e[Classes.TABLE_HAS_REORDER_HANDLE]=null!=this.props.reorderHandle,e));return React.createElement(HeaderCell,__assign({isReorderable:this.props.enableColumnReordering,isSelected:this.props.isColumnSelected},s,{className:n}),this.renderName(),this.maybeRenderContent(),this.props.loading?void 0:this.props.resizeHandle)},t.prototype.renderName=function(){var e=this.props,t=e.index,s=e.loading,n=e.name,a=e.nameRenderer,o=e.reorderHandle,r=this.maybeRenderDropdownMenu(),l=React.createElement("div",{className:Classes.TABLE_TRUNCATED_TEXT},n),i=React.createElement(LoadableContent,{loading:s,variableLength:!0},null==a?l:a(n,t));return this.context.enableColumnInteractionBar?React.createElement("div",{className:Classes.TABLE_COLUMN_NAME,title:n},React.createElement("div",{className:Classes.TABLE_INTERACTION_BAR},o,r),React.createElement(HorizontalCellDivider,null),React.createElement("div",{className:Classes.TABLE_COLUMN_NAME_TEXT},i)):React.createElement("div",{className:Classes.TABLE_COLUMN_NAME,title:n},o,r,React.createElement("div",{className:Classes.TABLE_COLUMN_NAME_TEXT},i))},t.prototype.maybeRenderContent=function(){if(null!==this.props.children)return React.createElement("div",{className:Classes.TABLE_HEADER_CONTENT},this.props.children)},t.prototype.maybeRenderDropdownMenu=function(){var e,t=this.props,s=t.index,n=t.menuIcon,a=t.menuRenderer;if(CoreUtils.isFunction(a)){var o=classNames(Classes.TABLE_TH_MENU_CONTAINER,CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT,((e={})[Classes.TABLE_TH_MENU_OPEN]=this.state.isActive,e));return React.createElement("div",{className:o},React.createElement("div",{className:Classes.TABLE_TH_MENU_CONTAINER_BACKGROUND}),React.createElement(Popover,{content:a(s),position:Position.BOTTOM,className:Classes.TABLE_TH_MENU,modifiers:{preventOverflow:{boundariesElement:"window"}},onOpened:this.handlePopoverOpened,onClosing:this.handlePopoverClosing},React.createElement(Icon,{icon:n})))}},t.defaultProps={isActive:!1,menuIcon:"chevron-down"},t.contextTypes=columnInteractionBarContextTypes,__decorate([polyfill],t)}(AbstractPureComponent2);export{ColumnHeaderCell};