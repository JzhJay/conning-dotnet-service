import classNames from"classnames";import*as React from"react";import{Icon,Utils as CoreUtils}from"@blueprintjs/core";import*as Classes from"../common/classes";import{CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT}from"../common/utils";import{DragEvents}from"../interactions/dragEvents";import{DragReorderable}from"../interactions/reorderable";import{Resizable}from"../interactions/resizable";import{DragSelectable}from"../interactions/selectable";import{RegionCardinality,Regions}from"../regions";const SHALLOW_COMPARE_PROP_KEYS_DENYLIST=["focusedCell","selectedRegions"];export class Header extends React.Component{constructor(e,s){super(e,s),this.convertEventToIndex=e=>{const s=this.props.getMouseCoordinate(e);return this.props.convertPointToIndex(s)},this.locateClick=e=>(this.activationIndex=this.convertEventToIndex(e),this.props.toRegion(this.activationIndex)),this.locateDragForSelection=(e,s,t=!1)=>{const r=this.props.getDragCoordinate(s.current),o=this.activationIndex,i=this.props.convertPointToIndex(r);return t?this.props.toRegion(i):this.props.toRegion(o,i)},this.locateDragForReordering=(e,s)=>{const t=this.props.getDragCoordinate(s.current),r=this.props.convertPointToIndex(t,!0);return r<0?void 0:r},this.renderCells=()=>{const{indexStart:e,indexEnd:s}=this.props,t=[];for(let r=e;r<=s;r++)t.push(this.renderNewCell(r));return t},this.renderNewCell=e=>{const s=this.props.getCellExtremaClasses(e,this.props.indexEnd);return(this.props.isGhostIndex(e)?this.props.ghostCellRenderer:this.renderCell)(e,s)},this.renderCell=(e,s)=>{const{getIndexClass:t,selectedRegions:r}=this.props,o=this.props.headerCellRenderer(e);if(null==o)return null;const i=null!=o.props.loading?o.props.loading:this.props.loading,l=this.props.isCellSelected(e),n=this.isEntireCellTargetReorderable(e),a={className:classNames(s,{[Classes.TABLE_HEADER_REORDERABLE]:n},this.props.getCellIndexClass(e),o.props.className),index:e,[this.props.headerCellIsSelectedPropName]:l,[this.props.headerCellIsReorderablePropName]:n,loading:i,reorderHandle:this.maybeRenderReorderHandle(e)},d=React.createElement(DragSelectable,{enableMultipleSelection:this.props.enableMultipleSelection,disabled:this.isDragSelectableDisabled,focusedCell:this.props.focusedCell,ignoredSelectors:[`.${Classes.TABLE_REORDER_HANDLE_TARGET}`],key:t(e),locateClick:this.locateClick,locateDrag:this.locateDragForSelection,onFocusedCell:this.props.onFocusedCell,onSelection:this.handleDragSelectableSelection,onSelectionEnd:this.handleDragSelectableSelectionEnd,selectedRegions:r,selectedRegionTransform:this.props.selectedRegionTransform},React.createElement(Resizable,{isResizable:this.props.isResizable,maxSize:this.props.maxSize,minSize:this.props.minSize,onDoubleClick:()=>this.props.handleResizeDoubleClick?.(e),onLayoutLock:this.props.onLayoutLock,onResizeEnd:s=>this.props.handleResizeEnd(e,s),onSizeChanged:s=>this.props.handleSizeChanged(e,s),orientation:this.props.resizeOrientation,size:this.props.getCellSize(e)},React.cloneElement(o,a)));return this.isReorderHandleEnabled()?d:this.wrapInDragReorderable(e,d,this.isDragReorderableDisabled)},this.handleDragSelectableSelection=e=>{this.props.onSelection(e),this.setState({hasValidSelection:!1})},this.handleDragSelectableSelectionEnd=()=>{this.activationIndex=null,this.setState({hasValidSelection:!0})},this.isDragSelectableDisabled=e=>{if(DragEvents.isAdditive(e))return!1;const s=this.convertEventToIndex(e);return this.isEntireCellTargetReorderable(s)},this.isDragReorderableDisabled=e=>{if(!this.isDragSelectableDisabled(e))return!0;const s=this.convertEventToIndex(e);return!this.isEntireCellTargetReorderable(s)},this.isEntireCellTargetReorderable=e=>{const{selectedRegions:s}=this.props;return this.props.isReorderable&&this.props.isCellSelected(e)&&this.state.hasValidSelection&&Regions.getRegionCardinality(s[0])===this.props.fullRegionCardinality&&1===s.length&&!this.isReorderHandleEnabled()},this.state={hasValidSelection:this.isSelectedRegionsControlledAndNonEmpty(e)}}componentDidUpdate(e,s){const t=this.isSelectedRegionsControlledAndNonEmpty(this.props);s.hasValidSelection!==t&&this.setState({hasValidSelection:t})}shouldComponentUpdate(e,s){return!CoreUtils.shallowCompareKeys(this.state,s)||!CoreUtils.shallowCompareKeys(this.props,e,{exclude:SHALLOW_COMPARE_PROP_KEYS_DENYLIST})||!CoreUtils.deepCompareKeys(this.props,e,SHALLOW_COMPARE_PROP_KEYS_DENYLIST)}render(){return this.props.wrapCells(this.renderCells())}isSelectedRegionsControlledAndNonEmpty(e=this.props){return null!=e.selectedRegions&&e.selectedRegions.length>0}isReorderHandleEnabled(){return this.isColumnHeader()&&this.props.isReorderable}maybeRenderReorderHandle(e){return this.isReorderHandleEnabled()?this.wrapInDragReorderable(e,React.createElement("div",{className:Classes.TABLE_REORDER_HANDLE_TARGET},React.createElement("div",{className:classNames(Classes.TABLE_REORDER_HANDLE,CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT)},React.createElement(Icon,{icon:"drag-handle-vertical",title:"Press down to drag"}))),!1):void 0}isColumnHeader(){return this.props.fullRegionCardinality===RegionCardinality.FULL_COLUMNS}wrapInDragReorderable(e,s,t){return React.createElement(DragReorderable,{disabled:t,key:this.props.getIndexClass(e),locateClick:this.locateClick,locateDrag:this.locateDragForReordering,onReordered:this.props.onReordered,onReordering:this.props.onReordering,onSelection:this.props.onSelection,onFocusedCell:this.props.onFocusedCell,selectedRegions:this.props.selectedRegions,toRegion:this.props.toRegion},s)}}