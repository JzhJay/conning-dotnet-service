import{__decorate}from"tslib";import classNames from"classnames";import*as React from"react";import{polyfill}from"react-lifecycles-compat";import{AbstractPureComponent2,Icon,Popover,Position,Utils as CoreUtils}from"@blueprintjs/core";import*as Classes from"../common/classes";import{columnInteractionBarContextTypes}from"../common/context";import{LoadableContent}from"../common/loadableContent";import{CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT}from"../common/utils";import{HeaderCell}from"./headerCell";export function HorizontalCellDivider(){return React.createElement("div",{className:Classes.TABLE_HORIZONTAL_CELL_DIVIDER})}let ColumnHeaderCell=class extends AbstractPureComponent2{constructor(){super(...arguments),this.state={isActive:!1},this.handlePopoverOpened=()=>this.setState({isActive:!0}),this.handlePopoverClosing=()=>this.setState({isActive:!1})}static isHeaderMouseTarget(e){return e.classList.contains(Classes.TABLE_HEADER)||e.classList.contains(Classes.TABLE_COLUMN_NAME)||e.classList.contains(Classes.TABLE_INTERACTION_BAR)||e.classList.contains(Classes.TABLE_HEADER_CONTENT)}render(){const{enableColumnReordering:e,isColumnSelected:s,menuIcon:t,name:a,nameRenderer:n,...l}=this.props,o=classNames(l.className,Classes.TABLE_COLUMN_HEADER_CELL,{[Classes.TABLE_HAS_INTERACTION_BAR]:this.context.enableColumnInteractionBar,[Classes.TABLE_HAS_REORDER_HANDLE]:null!=this.props.reorderHandle});return React.createElement(HeaderCell,Object.assign({isReorderable:this.props.enableColumnReordering,isSelected:this.props.isColumnSelected},l,{className:o}),this.renderName(),this.maybeRenderContent(),this.props.loading?void 0:this.props.resizeHandle)}renderName(){const{index:e,loading:s,name:t,nameRenderer:a,reorderHandle:n}=this.props,l=this.maybeRenderDropdownMenu(),o=React.createElement("div",{className:Classes.TABLE_TRUNCATED_TEXT},t),r=React.createElement(LoadableContent,{loading:s,variableLength:!0},null==a?o:a(t,e));return this.context.enableColumnInteractionBar?React.createElement("div",{className:Classes.TABLE_COLUMN_NAME,title:t},React.createElement("div",{className:Classes.TABLE_INTERACTION_BAR},n,l),React.createElement(HorizontalCellDivider,null),React.createElement("div",{className:Classes.TABLE_COLUMN_NAME_TEXT},r)):React.createElement("div",{className:Classes.TABLE_COLUMN_NAME,title:t},n,l,React.createElement("div",{className:Classes.TABLE_COLUMN_NAME_TEXT},r))}maybeRenderContent(){if(null!==this.props.children)return React.createElement("div",{className:Classes.TABLE_HEADER_CONTENT},this.props.children)}maybeRenderDropdownMenu(){const{index:e,menuIcon:s,menuRenderer:t}=this.props;if(!CoreUtils.isFunction(t))return;const a=classNames(Classes.TABLE_TH_MENU_CONTAINER,CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT,{[Classes.TABLE_TH_MENU_OPEN]:this.state.isActive});return React.createElement("div",{className:a},React.createElement("div",{className:Classes.TABLE_TH_MENU_CONTAINER_BACKGROUND}),React.createElement(Popover,{content:t(e),position:Position.BOTTOM,className:Classes.TABLE_TH_MENU,modifiers:{preventOverflow:{boundariesElement:"window"}},onOpened:this.handlePopoverOpened,onClosing:this.handlePopoverClosing},React.createElement(Icon,{icon:s})))}};ColumnHeaderCell.defaultProps={isActive:!1,menuIcon:"chevron-down"},ColumnHeaderCell.contextTypes=columnInteractionBarContextTypes,ColumnHeaderCell=__decorate([polyfill],ColumnHeaderCell);export{ColumnHeaderCell};