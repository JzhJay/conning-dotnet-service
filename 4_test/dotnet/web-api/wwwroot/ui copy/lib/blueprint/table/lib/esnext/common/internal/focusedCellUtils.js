import{RegionCardinality,Regions}from"../../regions";import*as Errors from"../errors";export function getFocusedOrLastSelectedIndex(e,o){return 0===e.length?void 0:null!=o?o.focusSelectionIndex:e.length-1}export function getInitialFocusedCell(e,o,n,r){if(e){if(null!=o)return o;if(null!=n)return n;if(r.length>0){const e=r.length-1;return{...Regions.getFocusCellCoordinatesFromRegion(r[e]),focusSelectionIndex:e}}return{col:0,row:0,focusSelectionIndex:0}}}export function isFocusedCellAtRegionTop(e,o){return null!=e.rows&&o.row===e.rows[0]}export function isFocusedCellAtRegionBottom(e,o){return null!=e.rows&&o.row===e.rows[1]}export function isFocusedCellAtRegionLeft(e,o){return null!=e.cols&&o.col===e.cols[0]}export function isFocusedCellAtRegionRight(e,o){return null!=e.cols&&o.col===e.cols[1]}export function toFullCoordinates(e,o=0){return{...e,focusSelectionIndex:o}}export function expandFocusedRegion(e,o){switch(Regions.getRegionCardinality(o)){case RegionCardinality.FULL_COLUMNS:{const[n,r]=getExpandedRegionIndices(e,o,"col","cols");return Regions.column(n,r)}case RegionCardinality.FULL_ROWS:{const[n,r]=getExpandedRegionIndices(e,o,"row","rows");return Regions.row(n,r)}case RegionCardinality.CELLS:const[n,r]=getExpandedRegionIndices(e,o,"row","rows"),[t,i]=getExpandedRegionIndices(e,o,"col","cols");return Regions.cell(n,t,r,i);default:return Regions.table()}}function getExpandedRegionIndices(e,o,n,r){const t=e[n],[i,l]=o[r];if(i!==l){if("rows"===r)throw new Error(Errors.TABLE_EXPAND_FOCUSED_REGION_MULTI_ROW_REGION);if("cols"===r)throw new Error(Errors.TABLE_EXPAND_FOCUSED_REGION_MULTI_COLUMN_REGION)}return t<=i?[t,i]:[i,t]}