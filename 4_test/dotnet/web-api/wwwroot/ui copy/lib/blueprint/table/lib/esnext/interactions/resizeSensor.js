import*as Classes from"../common/classes";export class ResizeSensor{static attach(e,s){const t=ResizeSensor.debounce(s),i=document.createElement("div");i.className=Classes.TABLE_RESIZE_SENSOR,i.style.cssText=ResizeSensor.RESIZE_SENSOR_STYLE,i.innerHTML=ResizeSensor.RESIZE_SENSOR_HTML,e.appendChild(i),"static"===getComputedStyle(e,null).getPropertyValue("position")&&(e.style.position="relative");const o=i.childNodes[0],l=o.childNodes[0],n=i.childNodes[1],r=()=>{l.style.width="100000px",l.style.height="100000px",o.scrollLeft=1e5,o.scrollTop=1e5,n.scrollLeft=1e5,n.scrollTop=1e5};let d,S;r();const E=()=>{if(null==e)return;const s=e.offsetWidth,i=e.offsetHeight;s===d&&i===S||(d=s,S=i,t.trigger()),r()};return o.addEventListener("scroll",E),n.addEventListener("scroll",E),()=>{e.removeChild(i),t.cancelled=!0}}static debounce(e){const s={cancelled:!1,trigger:()=>{s.triggered||s.cancelled||(s.triggered=!0,requestAnimationFrame((()=>{s.triggered=!1,s.cancelled||e()})))},triggered:!1};return s}}ResizeSensor.RESIZE_SENSOR_STYLE="position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;",ResizeSensor.RESIZE_SENSOR_HTML=`<div class="${Classes.TABLE_RESIZE_SENSOR_EXPAND}"\n        style="${ResizeSensor.RESIZE_SENSOR_STYLE}"><div style="position: absolute; left: 0; top: 0; transition: 0s;"\n        ></div></div><div class="${Classes.TABLE_RESIZE_SENSOR_SHRINK}" style="${ResizeSensor.RESIZE_SENSOR_STYLE}"\n        ><div style="position: absolute; left: 0; top: 0; transition: 0s; width: 200%; height: 200%;"></div></div>`;