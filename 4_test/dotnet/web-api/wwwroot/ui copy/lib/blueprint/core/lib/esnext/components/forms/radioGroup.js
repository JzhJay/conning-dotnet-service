import{__decorate}from"tslib";import*as React from"react";import{polyfill}from"react-lifecycles-compat";import{AbstractPureComponent2,Classes}from"../../common";import*as Errors from"../../common/errors";import{DISPLAYNAME_PREFIX}from"../../common/props";import{isElementOfType}from"../../common/utils";import{Radio}from"./controls";let counter=0;function nextName(){return`${RadioGroup.displayName}-${counter++}`}let RadioGroup=class extends AbstractPureComponent2{constructor(){super(...arguments),this.autoGroupName=nextName()}render(){const{label:e}=this.props;return React.createElement("div",{className:this.props.className},null==e?null:React.createElement("label",{className:Classes.LABEL},e),Array.isArray(this.props.options)?this.renderOptions():this.renderChildren())}validateProps(){null!=this.props.children&&null!=this.props.options&&console.warn(Errors.RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX)}renderChildren(){return React.Children.map(this.props.children,(e=>isElementOfType(e,Radio)?React.cloneElement(e,this.getRadioProps(e.props)):e))}renderOptions(){return this.props.options?.map((e=>React.createElement(Radio,Object.assign({},this.getRadioProps(e),{key:e.value,labelElement:e.label||e.value}))))}getRadioProps(e){const{name:o}=this.props,{className:r,disabled:s,value:t}=e;return{checked:t===this.props.selectedValue,className:r,disabled:s||this.props.disabled,inline:this.props.inline,name:null==o?this.autoGroupName:o,onChange:this.props.onChange,value:t}}};RadioGroup.displayName=`${DISPLAYNAME_PREFIX}.RadioGroup`,RadioGroup=__decorate([polyfill],RadioGroup);export{RadioGroup};