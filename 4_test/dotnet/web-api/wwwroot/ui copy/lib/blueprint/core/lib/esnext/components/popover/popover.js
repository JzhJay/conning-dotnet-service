import{__decorate}from"tslib";import classNames from"classnames";import*as React from"react";import{polyfill}from"react-lifecycles-compat";import{Manager,Popper,Reference}from"react-popper";import{AbstractPureComponent2,Classes,refHandler,setRef}from"../../common";import*as Errors from"../../common/errors";import{DISPLAYNAME_PREFIX}from"../../common/props";import*as Utils from"../../common/utils";import{Overlay}from"../overlay/overlay";import{ResizeSensor}from"../resize-sensor/resizeSensor";import{Tooltip}from"../tooltip/tooltip";import{PopoverArrow}from"./popoverArrow";import{positionToPlacement}from"./popoverMigrationUtils";import{arrowOffsetModifier,getTransformOrigin}from"./popperUtils";export const PopoverInteractionKind={CLICK:"click",CLICK_TARGET_ONLY:"click-target",HOVER:"hover",HOVER_TARGET_ONLY:"hover-target"};let Popover=class extends AbstractPureComponent2{constructor(){super(...arguments),this.popoverRef=Utils.createReactRef(),this.popoverElement=null,this.targetElement=null,this.state={hasDarkParent:!1,isOpen:this.getIsOpen(this.props),transformOrigin:""},this.isMouseInTargetOrPopover=!1,this.lostFocusOnSamePage=!0,this.handlePopoverRef=refHandler(this,"popoverElement",this.props.popoverRef),this.handleTargetRef=e=>this.targetElement=e,this.reposition=()=>this.popperScheduleUpdate?.(),this.renderPopover=e=>{const{interactionKind:s,usePortal:t}=this.props,{transformOrigin:o}=this.state;this.popperScheduleUpdate=e.scheduleUpdate;const r={onClick:this.handlePopoverClick};(s===PopoverInteractionKind.HOVER||!t&&s===PopoverInteractionKind.HOVER_TARGET_ONLY)&&(r.onMouseEnter=this.handleMouseEnter,r.onMouseLeave=this.handleMouseLeave);const n=classNames(Classes.POPOVER,{[Classes.DARK]:this.props.inheritDarkTheme&&this.state.hasDarkParent,[Classes.MINIMAL]:this.props.minimal,[Classes.POPOVER_CAPTURING_DISMISS]:this.props.captureDismiss,[Classes.POPOVER_OUT_OF_BOUNDARIES]:!0===e.outOfBoundaries},this.props.popoverClassName);return React.createElement("div",{className:Classes.TRANSITION_CONTAINER,ref:e.ref,style:e.style},React.createElement(ResizeSensor,{onResize:this.reposition},React.createElement("div",Object.assign({className:n,style:{transformOrigin:o},ref:this.popoverRef},r),this.isArrowEnabled()&&React.createElement(PopoverArrow,{arrowProps:e.arrowProps,placement:e.placement}),React.createElement("div",{className:Classes.POPOVER_CONTENT},this.understandChildren().content))))},this.renderTarget=e=>{const{fill:s,openOnTargetFocus:t,targetClassName:o,targetProps:r={}}=this.props,{isOpen:n}=this.state,i=this.isControlled(),a=this.isHoverInteractionKind();let{targetTagName:p}=this.props;s&&(p="div");const l=a?{onBlur:this.handleTargetBlur,onFocus:this.handleTargetFocus,onMouseEnter:this.handleMouseEnter,onMouseLeave:this.handleMouseLeave}:{onClick:this.handleTargetClick};l["aria-haspopup"]="true",l.className=classNames(Classes.POPOVER_TARGET,{[Classes.POPOVER_OPEN]:n},r.className,o),l.ref=e.ref;const h=Utils.ensureElement(this.understandChildren().target);if(void 0===h)return null;const c=h.props.tabIndex,d=null==c&&t&&a?0:c,O=React.cloneElement(h,{className:classNames(h.props.className,{[Classes.ACTIVE]:n&&!i&&!a}),disabled:!(!n||!Utils.isElementOfType(h,Tooltip))||h.props.disabled,tabIndex:d}),u=React.createElement(p,{...r,...l},O);return React.createElement(ResizeSensor,{onResize:this.reposition},u)},this.isControlled=()=>void 0!==this.props.isOpen,this.handleTargetFocus=e=>{if(this.props.openOnTargetFocus&&this.isHoverInteractionKind()){if(null==e.relatedTarget&&!this.lostFocusOnSamePage)return;this.handleMouseEnter(e)}this.props.targetProps?.onFocus?.(e)},this.handleTargetBlur=e=>{this.props.openOnTargetFocus&&this.isHoverInteractionKind()&&(null==e.relatedTarget||this.isElementInPopover(e.relatedTarget)||this.handleMouseLeave(e)),this.lostFocusOnSamePage=null!=e.relatedTarget,this.props.targetProps?.onBlur?.(e)},this.handleMouseEnter=e=>{this.isMouseInTargetOrPopover=!0,this.props.usePortal||!this.isElementInPopover(e.target)||this.props.interactionKind!==PopoverInteractionKind.HOVER_TARGET_ONLY||this.props.openOnTargetFocus?this.props.disabled||this.setOpenState(!0,e,this.props.hoverOpenDelay):this.handleMouseLeave(e),this.props.targetProps?.onMouseEnter?.(e)},this.handleMouseLeave=e=>{this.isMouseInTargetOrPopover=!1,this.setTimeout((()=>{this.isMouseInTargetOrPopover||this.setOpenState(!1,e,this.props.hoverCloseDelay)})),this.props.targetProps?.onMouseLeave?.(e)},this.handlePopoverClick=e=>{const s=e.target,t=s.closest(`.${Classes.POPOVER}`),o=t===this.popoverRef.current,r=t?.classList.contains(Classes.POPOVER_CAPTURING_DISMISS),n=s.closest(`.${Classes.POPOVER_DISMISS}, .${Classes.POPOVER_DISMISS_OVERRIDE}`),i=null!=n&&n.classList.contains(Classes.POPOVER_DISMISS),a=null!=s.closest(`:disabled, .${Classes.DISABLED}`);!i||a||r&&!o||this.setOpenState(!1,e)},this.handleOverlayClose=e=>{if(null===this.targetElement||void 0===e)return;const s=e.target;(!Utils.elementIsOrContains(this.targetElement,s)||e.nativeEvent instanceof KeyboardEvent)&&this.setOpenState(!1,e)},this.handleTargetClick=e=>{this.props.disabled||this.isElementInPopover(e.target)||(null==this.props.isOpen?this.setState((e=>({isOpen:!e.isOpen}))):this.setOpenState(!this.props.isOpen,e)),this.props.targetProps?.onClick?.(e)},this.updatePopoverState=e=>(this.setState({transformOrigin:getTransformOrigin(e)}),e)}render(){const{className:e,disabled:s,fill:t,placement:o,position:r="auto",shouldReturnFocusOnClose:n}=this.props,{isOpen:i}=this.state;let{wrapperTagName:a}=this.props;t&&(a="div");const p=null==Utils.ensureElement(this.understandChildren().content);!p||s||!1===i||Utils.isNodeEnv("production")||console.warn(Errors.POPOVER_WARN_EMPTY_CONTENT);const l=classNames(Classes.POPOVER_WRAPPER,e,{[Classes.FILL]:t}),h=!this.isHoverInteractionKind()&&void 0,c=React.createElement(a,{className:l},React.createElement(Reference,{innerRef:this.handleTargetRef},this.renderTarget),React.createElement(Overlay,{autoFocus:this.props.autoFocus??h,backdropClassName:Classes.POPOVER_BACKDROP,backdropProps:this.props.backdropProps,canEscapeKeyClose:this.props.canEscapeKeyClose,canOutsideClickClose:this.props.interactionKind===PopoverInteractionKind.CLICK,className:this.props.portalClassName,enforceFocus:this.props.enforceFocus,hasBackdrop:this.props.hasBackdrop,isOpen:i&&!p,onClose:this.handleOverlayClose,onClosed:this.props.onClosed,onClosing:this.props.onClosing,onOpened:this.props.onOpened,onOpening:this.props.onOpening,transitionDuration:this.props.transitionDuration,transitionName:Classes.POPOVER,usePortal:this.props.usePortal,portalContainer:this.props.portalContainer,shouldReturnFocusOnClose:!this.isHoverInteractionKind()&&n},React.createElement(Popper,{innerRef:this.handlePopoverRef,placement:o??positionToPlacement(r),modifiers:this.getPopperModifiers()},this.renderPopover)));return React.createElement(Manager,null,c)}componentDidMount(){this.updateDarkParent()}componentDidUpdate(e,s){super.componentDidUpdate(e,s),e.popoverRef!==this.props.popoverRef&&(setRef(e.popoverRef,null),this.handlePopoverRef=refHandler(this,"popoverElement",this.props.popoverRef),setRef(this.props.popoverRef,this.popoverElement)),this.updateDarkParent();const t=this.getIsOpen(this.props);null!=this.props.isOpen&&t!==this.state.isOpen?(this.setOpenState(t),this.setState({isOpen:t})):this.props.disabled&&this.state.isOpen&&null==this.props.isOpen&&this.setOpenState(!1)}validateProps(e){null==e.isOpen&&null!=e.onInteraction&&console.warn(Errors.POPOVER_WARN_UNCONTROLLED_ONINTERACTION),e.hasBackdrop&&!e.usePortal&&console.warn(Errors.POPOVER_WARN_HAS_BACKDROP_INLINE),e.hasBackdrop&&e.interactionKind!==PopoverInteractionKind.CLICK&&console.error(Errors.POPOVER_HAS_BACKDROP_INTERACTION),void 0!==e.placement&&void 0!==e.position&&console.warn(Errors.POPOVER_WARN_PLACEMENT_AND_POSITION_MUTEX);const s=React.Children.count(e.children),t=void 0!==e.content,o=void 0!==e.target;0!==s||o||console.error(Errors.POPOVER_REQUIRES_TARGET),s>2&&console.warn(Errors.POPOVER_WARN_TOO_MANY_CHILDREN),s>0&&o&&console.warn(Errors.POPOVER_WARN_DOUBLE_TARGET),2===s&&t&&console.warn(Errors.POPOVER_WARN_DOUBLE_CONTENT)}updateDarkParent(){if(this.props.usePortal&&this.state.isOpen){const e=null!=this.targetElement&&null!=this.targetElement.closest(`.${Classes.DARK}`);this.setState({hasDarkParent:e})}}understandChildren(){const{children:e,content:s,target:t}=this.props,[o,r]=React.Children.toArray(e);return{content:null==r?s:r,target:null==o?t:o}}getIsOpen(e){return!e.disabled&&(null!=e.isOpen?e.isOpen:e.defaultIsOpen)}getPopperModifiers(){const{boundary:e,modifiers:s}=this.props,{flip:t={},preventOverflow:o={}}=s;return{...s,arrowOffset:{enabled:this.isArrowEnabled(),fn:arrowOffsetModifier,order:510},flip:{boundariesElement:e,...t},preventOverflow:{boundariesElement:e,...o},updatePopoverState:{enabled:!0,fn:this.updatePopoverState,order:900}}}setOpenState(e,s,t){this.cancelOpenTimeout?.(),void 0!==t&&t>0?this.cancelOpenTimeout=this.setTimeout((()=>this.setOpenState(e,s)),t):(null==this.props.isOpen?this.setState({isOpen:e}):this.props.onInteraction?.(e,s),e||this.props.onClose?.(s))}isArrowEnabled(){const{minimal:e,modifiers:s}=this.props;return!e&&(null==s?.arrow||s.arrow.enabled)}isElementInPopover(e){return this.popoverElement?.contains(e)}isHoverInteractionKind(){return this.props.interactionKind===PopoverInteractionKind.HOVER||this.props.interactionKind===PopoverInteractionKind.HOVER_TARGET_ONLY}};Popover.displayName=`${DISPLAYNAME_PREFIX}.Popover`,Popover.defaultProps={boundary:"scrollParent",captureDismiss:!1,defaultIsOpen:!1,disabled:!1,fill:!1,hasBackdrop:!1,hoverCloseDelay:300,hoverOpenDelay:150,inheritDarkTheme:!0,interactionKind:PopoverInteractionKind.CLICK,minimal:!1,modifiers:{},openOnTargetFocus:!0,shouldReturnFocusOnClose:!1,targetTagName:"span",transitionDuration:300,usePortal:!0,wrapperTagName:"span"},Popover=__decorate([polyfill],Popover);export{Popover};