import{__decorate}from"tslib";import*as React from"react";import{findDOMNode}from"react-dom";import{polyfill}from"react-lifecycles-compat";import ResizeObserver from"resize-observer-polyfill";import{AbstractPureComponent2}from"../../common";import{DISPLAYNAME_PREFIX}from"../../common/props";let ResizeSensor=class extends AbstractPureComponent2{constructor(){super(...arguments),this.element=null,this.observer=new ResizeObserver((e=>this.props.onResize?.(e)))}render(){return React.Children.only(this.props.children)}componentDidMount(){this.observeElement()}componentDidUpdate(e){this.observeElement(this.props.observeParents!==e.observeParents)}componentWillUnmount(){this.observer.disconnect()}observeElement(e=!1){const r=this.getElement();if(r instanceof Element){if((r!==this.element||e)&&(this.observer.disconnect(),this.element=r,this.observer.observe(r),this.props.observeParents)){let e=r.parentElement;for(;null!=e;)this.observer.observe(e),e=e.parentElement}}else this.observer.disconnect()}getElement(){try{return findDOMNode(this)}catch{return null}}};ResizeSensor.displayName=`${DISPLAYNAME_PREFIX}.ResizeSensor`,ResizeSensor=__decorate([polyfill],ResizeSensor);export{ResizeSensor};