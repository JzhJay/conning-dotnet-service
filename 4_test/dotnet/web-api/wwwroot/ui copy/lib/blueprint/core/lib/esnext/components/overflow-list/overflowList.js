import classNames from"classnames";import*as React from"react";import{Boundary}from"../../common/boundary";import*as Classes from"../../common/classes";import{OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED}from"../../common/errors";import{DISPLAYNAME_PREFIX}from"../../common/props";import{shallowCompareKeys}from"../../common/utils";import{ResizeSensor}from"../resize-sensor/resizeSensor";export var OverflowDirection;!function(e){e[e.NONE=0]="NONE",e[e.GROW=1]="GROW",e[e.SHRINK=2]="SHRINK"}(OverflowDirection||(OverflowDirection={}));export class OverflowList extends React.Component{constructor(){super(...arguments),this.state={direction:OverflowDirection.NONE,lastOverflowCount:0,overflow:[],visible:this.props.items},this.previousWidths=new Map,this.spacer=null,this.resize=e=>{const t=e.some((e=>{const t=this.previousWidths.get(e.target)||0;return e.contentRect.width>t}));this.repartition(t),e.forEach((e=>this.previousWidths.set(e.target,e.contentRect.width)))}}static ofType(){return OverflowList}componentDidMount(){this.repartition(!1)}shouldComponentUpdate(e,t){return!(this.state!==t&&shallowCompareKeys(this.state,t))}componentDidUpdate(e,t){e.observeParents!==this.props.observeParents&&console.warn(OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED),e.collapseFrom===this.props.collapseFrom&&e.items===this.props.items&&e.minVisibleItems===this.props.minVisibleItems&&e.overflowRenderer===this.props.overflowRenderer&&e.alwaysRenderOverflow===this.props.alwaysRenderOverflow&&e.visibleItemRenderer===this.props.visibleItemRenderer||this.setState({direction:OverflowDirection.GROW,lastOverflowCount:0,overflow:[],visible:this.props.items}),shallowCompareKeys(t,this.state)||this.repartition(!1);const{direction:s,overflow:o,lastOverflowCount:r}=this.state;s===OverflowDirection.NONE&&s!==t.direction&&o.length!==r&&this.props.onOverflow?.(o)}render(){const{className:e,collapseFrom:t,observeParents:s,style:o,tagName:r="div",visibleItemRenderer:i}=this.props,n=this.maybeRenderOverflow(),l=React.createElement(r,{className:classNames(Classes.OVERFLOW_LIST,e),style:o},t===Boundary.START?n:null,this.state.visible.map(i),t===Boundary.END?n:null,React.createElement("div",{className:Classes.OVERFLOW_LIST_SPACER,ref:e=>this.spacer=e}));return React.createElement(ResizeSensor,{onResize:this.resize,observeParents:s},l)}maybeRenderOverflow(){const{overflow:e}=this.state;return 0!==e.length||this.props.alwaysRenderOverflow?this.props.overflowRenderer(e):null}repartition(e){null!=this.spacer&&(e?this.setState((e=>({direction:OverflowDirection.GROW,lastOverflowCount:e.direction===OverflowDirection.NONE?e.overflow.length:e.lastOverflowCount,overflow:[],visible:this.props.items}))):this.spacer.getBoundingClientRect().width<.9?this.setState((e=>{if(e.visible.length<=this.props.minVisibleItems)return null;const t=this.props.collapseFrom===Boundary.START,s=e.visible.slice(),o=t?s.shift():s.pop();if(void 0===o)return null;const r=t?[...e.overflow,o]:[o,...e.overflow];return{direction:e.direction===OverflowDirection.NONE?OverflowDirection.SHRINK:e.direction,overflow:r,visible:s}})):this.setState({direction:OverflowDirection.NONE}))}}OverflowList.displayName=`${DISPLAYNAME_PREFIX}.OverflowList`,OverflowList.defaultProps={alwaysRenderOverflow:!1,collapseFrom:Boundary.START,minVisibleItems:0};