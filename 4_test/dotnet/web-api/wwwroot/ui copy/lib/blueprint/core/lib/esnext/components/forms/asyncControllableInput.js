import{__decorate}from"tslib";import*as React from"react";import{polyfill}from"react-lifecycles-compat";import{DISPLAYNAME_PREFIX}from"../../common/props";let AsyncControllableInput=class extends React.PureComponent{constructor(){super(...arguments),this.state={hasPendingUpdate:!1,isComposing:!1,nextValue:this.props.value,value:this.props.value},this.handleCompositionStart=e=>{this.setState({isComposing:!0,nextValue:this.state.value}),this.props.onCompositionStart?.(e)},this.handleCompositionEnd=e=>{this.setState({isComposing:!1}),this.props.onCompositionEnd?.(e)},this.handleChange=e=>{const{value:t}=e.target;this.setState({nextValue:t}),this.props.onChange?.(e)}}static getDerivedStateFromProps(e,t){return t.isComposing||void 0===e.value?null:t.nextValue!==t.value?e.value===t.nextValue?t.hasPendingUpdate?{value:e.value,hasPendingUpdate:!1}:{value:t.nextValue}:e.value===t.value?{hasPendingUpdate:!0}:{value:e.value,nextValue:e.value,hasPendingUpdate:!1}:{value:e.value,nextValue:e.value,hasPendingUpdate:!1}}render(){const{isComposing:e,hasPendingUpdate:t,value:n,nextValue:a}=this.state,{inputRef:o,...s}=this.props;return React.createElement("input",Object.assign({},s,{ref:o,value:e||t?a:n,onCompositionStart:this.handleCompositionStart,onCompositionEnd:this.handleCompositionEnd,onChange:this.handleChange}))}};AsyncControllableInput.displayName=`${DISPLAYNAME_PREFIX}.AsyncControllableInput`,AsyncControllableInput=__decorate([polyfill],AsyncControllableInput);export{AsyncControllableInput};