import{__decorate}from"tslib";import classNames from"classnames";import*as React from"react";import{polyfill}from"react-lifecycles-compat";import{CSSTransition,TransitionGroup}from"react-transition-group";import{AbstractPureComponent2,Classes}from"../../common";import*as Errors from"../../common/errors";import{PanelView}from"./panelView";let PanelStack=class extends AbstractPureComponent2{constructor(){super(...arguments),this.state={direction:"push",stack:null!=this.props.stack?this.props.stack.slice().reverse():void 0!==this.props.initialPanel?[this.props.initialPanel]:[]},this.renderPanel=(t,e)=>{const{renderActivePanelOnly:s,showPanelHeader:a=!0}=this.props,{stack:n}=this.state,r=n.length-e,l=s?n.length:r;return React.createElement(CSSTransition,{classNames:Classes.PANEL_STACK,key:l,timeout:400},React.createElement(PanelView,{onClose:this.handlePanelClose,onOpen:this.handlePanelOpen,panel:t,previousPanel:n[e+1],showHeader:a}))},this.handlePanelClose=t=>{const{stack:e}=this.state;e[0]!==t||e.length<=1||(this.props.onClose?.(t),null==this.props.stack&&this.setState((t=>({direction:"pop",stack:t.stack.slice(1)}))))},this.handlePanelOpen=t=>{this.props.onOpen?.(t),null==this.props.stack&&this.setState((e=>({direction:"push",stack:[t,...e.stack]})))}}componentDidUpdate(t,e){super.componentDidUpdate(t,e),this.props.stack!==t.stack&&null!=t.stack&&this.setState({stack:this.props.stack.slice().reverse()}),(null!=this.props.stack?this.props.stack.length:0)!==(null!=t.stack?t.stack.length:0)&&null!=t.stack&&this.setState({direction:t.stack.length-this.props.stack.length<0?"push":"pop"})}render(){const t=classNames(Classes.PANEL_STACK,`${Classes.PANEL_STACK}-${this.state.direction}`,this.props.className);return React.createElement(TransitionGroup,{className:t,component:"div"},this.renderPanels())}validateProps(t){(null==t.initialPanel&&null==t.stack||null!=t.initialPanel&&null!=t.stack)&&console.error(Errors.PANEL_STACK_INITIAL_PANEL_STACK_MUTEX),null!=t.stack&&0===t.stack.length&&console.error(Errors.PANEL_STACK_REQUIRES_PANEL)}renderPanels(){const{renderActivePanelOnly:t=!0}=this.props,{stack:e}=this.state;return 0===e.length?null:(t?[e[0]]:e).map(this.renderPanel).reverse()}};PanelStack=__decorate([polyfill],PanelStack);export{PanelStack};