export function arraysEqual(e,r,n){return void 0===n&&(n=function(e,r){return e===r}),null==e&&null==r||null!=e&&null!=r&&e.length===r.length&&e.every((function(e,t){return n(e,r[t])}))}export function shallowCompareKeys(e,r,n){if(null==e&&null==r)return!0;if(null==e||null==r)return!1;if(Array.isArray(e)||Array.isArray(r))return!1;if(null!=n)return shallowCompareKeysImpl(e,r,n);var t=Object.keys(e),u=Object.keys(r);return shallowCompareKeysImpl(e,r,{include:t})&&shallowCompareKeysImpl(e,r,{include:u})}export function deepCompareKeys(e,r,n){if(e===r)return!0;if(null==e&&null==r)return!0;if(null==e||null==r)return!1;if(Array.isArray(e)||Array.isArray(r))return arraysEqual(e,r,deepCompareKeys);if(isSimplePrimitiveType(e)||isSimplePrimitiveType(r))return e===r;if(null!=n)return deepCompareKeysImpl(e,r,n);if(e.constructor!==r.constructor)return!1;var t=Object.keys(e),u=Object.keys(r);return null!=t&&null!=u&&(0===t.length&&0===u.length||arraysEqual(t,u)&&deepCompareKeysImpl(e,r,t))}export function getDeepUnequalKeyValues(e,r,n){return void 0===e&&(e={}),void 0===r&&(r={}),getUnequalKeyValues(e,r,null==n?unionKeys(e,r):n,(function(e,r,n){return deepCompareKeys(e,r,[n])}))}function shallowCompareKeysImpl(e,r,n){return filterKeys(e,r,n).every((function(n){return e.hasOwnProperty(n)===r.hasOwnProperty(n)&&e[n]===r[n]}))}function deepCompareKeysImpl(e,r,n){return n.every((function(n){return e.hasOwnProperty(n)===r.hasOwnProperty(n)&&deepCompareKeys(e[n],r[n])}))}function isSimplePrimitiveType(e){return"number"==typeof e||"string"==typeof e||"boolean"==typeof e}function filterKeys(e,r,n){if(isAllowlist(n))return n.include;if(isDenylist(n)){var t=Object.keys(e),u=Object.keys(r),l=arrayToObject(t.concat(u));return n.exclude.forEach((function(e){return delete l[e]})),Object.keys(l)}return[]}function isAllowlist(e){return null!=e&&null!=e.include}function isDenylist(e){return null!=e&&null!=e.exclude}function arrayToObject(e){return e.reduce((function(e,r){return e[r]=!0,e}),{})}function getUnequalKeyValues(e,r,n,t){return n.filter((function(n){return!t(e,r,n)})).map((function(n){return{key:n,valueA:e[n],valueB:r[n]}}))}function unionKeys(e,r){var n=Object.keys(e),t=Object.keys(r),u=arrayToObject(n.concat(t));return Object.keys(u)}