import{__decorate,__extends}from"tslib";import*as React from"react";import{findDOMNode}from"react-dom";import{polyfill}from"react-lifecycles-compat";import ResizeObserver from"resize-observer-polyfill";import{AbstractPureComponent2}from"../../common";import{DISPLAYNAME_PREFIX}from"../../common/props";var ResizeSensor=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.element=null,t.observer=new ResizeObserver((function(e){var o,r;return null===(r=(o=t.props).onResize)||void 0===r?void 0:r.call(o,e)})),t}return __extends(t,e),t.prototype.render=function(){return React.Children.only(this.props.children)},t.prototype.componentDidMount=function(){this.observeElement()},t.prototype.componentDidUpdate=function(e){this.observeElement(this.props.observeParents!==e.observeParents)},t.prototype.componentWillUnmount=function(){this.observer.disconnect()},t.prototype.observeElement=function(e){void 0===e&&(e=!1);var t=this.getElement();if(t instanceof Element){if((t!==this.element||e)&&(this.observer.disconnect(),this.element=t,this.observer.observe(t),this.props.observeParents))for(var o=t.parentElement;null!=o;)this.observer.observe(o),o=o.parentElement}else this.observer.disconnect()},t.prototype.getElement=function(){try{return findDOMNode(this)}catch(e){return null}},t.displayName=DISPLAYNAME_PREFIX+".ResizeSensor",__decorate([polyfill],t)}(AbstractPureComponent2);export{ResizeSensor};