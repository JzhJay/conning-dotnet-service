import{__decorate}from"tslib";import classNames from"classnames";import*as React from"react";import{polyfill}from"react-lifecycles-compat";import{AbstractPureComponent2,Classes}from"../../common";import*as Errors from"../../common/errors";import{DISPLAYNAME_PREFIX,removeNonHTMLProps}from"../../common/props";import{Icon}from"../icon/icon";import{AsyncControllableInput}from"./asyncControllableInput";let InputGroup=class extends AbstractPureComponent2{constructor(){super(...arguments),this.state={},this.leftElement=null,this.rightElement=null,this.refHandlers={leftElement:t=>this.leftElement=t,rightElement:t=>this.rightElement=t}}render(){const{asyncControl:t=!1,className:e,disabled:s,fill:l,inputRef:n,intent:r,large:i,small:o,round:a}=this.props,m=classNames(Classes.INPUT_GROUP,Classes.intentClass(r),{[Classes.DISABLED]:s,[Classes.FILL]:l,[Classes.LARGE]:i,[Classes.SMALL]:o,[Classes.ROUND]:a},e),p={...this.props.style,paddingLeft:this.state.leftElementWidth,paddingRight:this.state.rightElementWidth},c={type:"text",...removeNonHTMLProps(this.props),className:Classes.INPUT,style:p};return React.createElement("div",{className:m},this.maybeRenderLeftElement(),t?React.createElement(AsyncControllableInput,Object.assign({},c,{inputRef:n})):React.createElement("input",Object.assign({},c,{ref:n})),this.maybeRenderRightElement())}componentDidMount(){this.updateInputWidth()}componentDidUpdate(t){const{leftElement:e,rightElement:s}=this.props;t.leftElement===e&&t.rightElement===s||this.updateInputWidth()}validateProps(t){null!=t.leftElement&&null!=t.leftIcon&&console.warn(Errors.INPUT_WARN_LEFT_ELEMENT_LEFT_ICON_MUTEX)}maybeRenderLeftElement(){const{leftElement:t,leftIcon:e}=this.props;return null!=t?React.createElement("span",{className:Classes.INPUT_LEFT_CONTAINER,ref:this.refHandlers.leftElement},t):null!=e?React.createElement(Icon,{icon:e}):void 0}maybeRenderRightElement(){const{rightElement:t}=this.props;if(null!=t)return React.createElement("span",{className:Classes.INPUT_ACTION,ref:this.refHandlers.rightElement},t)}updateInputWidth(){const{leftElementWidth:t,rightElementWidth:e}=this.state;if(null!=this.leftElement){const{clientWidth:e}=this.leftElement;(void 0===t||Math.abs(e-t)>2)&&this.setState({leftElementWidth:e})}else this.setState({leftElementWidth:void 0});if(null!=this.rightElement){const{clientWidth:t}=this.rightElement;(void 0===e||Math.abs(t-e)>2)&&this.setState({rightElementWidth:t})}else this.setState({rightElementWidth:void 0})}};InputGroup.displayName=`${DISPLAYNAME_PREFIX}.InputGroup`,InputGroup=__decorate([polyfill],InputGroup);export{InputGroup};