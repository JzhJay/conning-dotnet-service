import{__decorate}from"tslib";import classNames from"classnames";import*as React from"react";import{polyfill}from"react-lifecycles-compat";import{AbstractPureComponent2,Classes,Keys}from"../../common";import{DISPLAYNAME_PREFIX}from"../../common/props";import*as Utils from"../../common/utils";import{Tab}from"./tab";import{generateTabPanelId,generateTabTitleId,TabTitle}from"./tabTitle";export const Expander=()=>React.createElement("div",{className:Classes.FLEX_EXPANDER});const TAB_SELECTOR=`.${Classes.TAB}`;let Tabs=class extends AbstractPureComponent2{constructor(e){super(e),this.tablistElement=null,this.refHandlers={tablist:e=>this.tablistElement=e},this.handleKeyDown=e=>{const t=document.activeElement?.closest(TAB_SELECTOR);if(null==t)return;const s=this.getTabElements().filter((e=>"false"===e.getAttribute("aria-disabled"))),a=s.indexOf(t),i=this.getKeyCodeDirection(e);if(a>=0&&void 0!==i){e.preventDefault();const{length:t}=s;s[(a+i+t)%t].focus()}},this.handleKeyPress=e=>{const t=e.target.closest(TAB_SELECTOR);null!=t&&Keys.isKeyboardClick(e.which)&&(e.preventDefault(),t.click())},this.handleTabClick=(e,t)=>{this.props.onChange?.(e,this.state.selectedTabId,t),void 0===this.props.selectedTabId&&this.setState({selectedTabId:e})},this.renderTabPanel=e=>{const{className:t,panel:s,id:a,panelClassName:i}=e.props;if(void 0!==s)return React.createElement("div",{"aria-labelledby":generateTabTitleId(this.props.id,a),"aria-hidden":a!==this.state.selectedTabId,className:classNames(Classes.TAB_PANEL,t,i),id:generateTabPanelId(this.props.id,a),key:a,role:"tabpanel"},s)},this.renderTabTitle=e=>{if(isTabElement(e)){const{id:t}=e.props;return React.createElement(TabTitle,Object.assign({},e.props,{parentId:this.props.id,onClick:this.handleTabClick,selected:t===this.state.selectedTabId}))}return e};const t=this.getInitialSelectedTabId();this.state={selectedTabId:t}}static getDerivedStateFromProps({selectedTabId:e}){return void 0!==e?{selectedTabId:e}:null}render(){const{indicatorWrapperStyle:e,selectedTabId:t}=this.state,s=React.Children.map(this.props.children,this.renderTabTitle),a=this.getTabChildren().filter(this.props.renderActiveTabPanelOnly?e=>e.props.id===t:()=>!0).map(this.renderTabPanel),i=this.props.animate?React.createElement("div",{className:Classes.TAB_INDICATOR_WRAPPER,style:e},React.createElement("div",{className:Classes.TAB_INDICATOR})):null,l=classNames(Classes.TABS,{[Classes.VERTICAL]:this.props.vertical},this.props.className),r=classNames(Classes.TAB_LIST,{[Classes.LARGE]:this.props.large});return React.createElement("div",{className:l},React.createElement("div",{className:r,onKeyDown:this.handleKeyDown,onKeyPress:this.handleKeyPress,ref:this.refHandlers.tablist,role:"tablist"},i,s),a)}componentDidMount(){this.moveSelectionIndicator(!1)}componentDidUpdate(e,t){(this.state.selectedTabId!==t.selectedTabId||null!=t.selectedTabId&&!Utils.arraysEqual(this.getTabChildrenProps(e),this.getTabChildrenProps(),Utils.shallowCompareKeys))&&this.moveSelectionIndicator()}getInitialSelectedTabId(){const{defaultSelectedTabId:e,selectedTabId:t}=this.props;if(void 0!==t)return t;if(void 0!==e)return e;{const e=this.getTabChildren();return 0===e.length?void 0:e[0].props.id}}getKeyCodeDirection(e){return isEventKeyCode(e,Keys.ARROW_LEFT,Keys.ARROW_UP)?-1:isEventKeyCode(e,Keys.ARROW_RIGHT,Keys.ARROW_DOWN)?1:void 0}getTabChildrenProps(e=this.props){return this.getTabChildren(e).map((e=>e.props))}getTabChildren(e=this.props){return React.Children.toArray(e.children).filter(isTabElement)}getTabElements(e=""){return null==this.tablistElement?[]:Array.from(this.tablistElement.querySelectorAll(TAB_SELECTOR+e))}moveSelectionIndicator(e=!0){if(null==this.tablistElement||!this.props.animate)return;const t=`${TAB_SELECTOR}[data-tab-id="${this.state.selectedTabId}"]`,s=this.tablistElement.querySelector(t);let a={display:"none"};if(null!=s){const{clientHeight:t,clientWidth:i,offsetLeft:l,offsetTop:r}=s;a={height:t,transform:`translateX(${Math.floor(l)}px) translateY(${Math.floor(r)}px)`,width:i},e||(a.transition="none")}this.setState({indicatorWrapperStyle:a})}};Tabs.Expander=Expander,Tabs.Tab=Tab,Tabs.defaultProps={animate:!0,large:!1,renderActiveTabPanelOnly:!1,vertical:!1},Tabs.displayName=`${DISPLAYNAME_PREFIX}.Tabs`,Tabs=__decorate([polyfill],Tabs);export{Tabs};function isEventKeyCode(e,...t){return t.indexOf(e.which)>=0}function isTabElement(e){return Utils.isElementOfType(e,Tab)}