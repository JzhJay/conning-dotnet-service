import classNames from"classnames";import*as React from"react";import{AbstractPureComponent2,Classes as CoreClasses,DISPLAYNAME_PREFIX,Keys,Popover,PopoverInteractionKind,Position,TagInput,refHandler,setRef}from"@blueprintjs/core";import{Classes}from"../../common";import{QueryList}from"../query-list/queryList";export class MultiSelect extends AbstractPureComponent2{constructor(){super(...arguments),this.state={isOpen:this.props.popoverProps&&this.props.popoverProps.isOpen||!1},this.TypedQueryList=QueryList.ofType(),this.input=null,this.queryList=null,this.refHandlers={input:refHandler(this,"input",this.props.tagInputProps?.inputRef),queryList:e=>this.queryList=e},this.renderQueryList=e=>{const{fill:t,tagInputProps:s={},popoverProps:n={},selectedItems:o=[],placeholder:p}=this.props,{handlePaste:i,handleKeyDown:r,handleKeyUp:a}=e;t&&(n.fill=!0,s.fill=!0);const l={...s.inputProps,className:classNames(s.inputProps?.className,Classes.MULTISELECT_TAG_INPUT_INPUT)};return React.createElement(Popover,Object.assign({autoFocus:!1,canEscapeKeyClose:!0,enforceFocus:!1,isOpen:this.state.isOpen,position:Position.BOTTOM_LEFT},n,{className:classNames(e.className,n.className),interactionKind:PopoverInteractionKind.CLICK,onInteraction:this.handlePopoverInteraction,popoverClassName:classNames(Classes.MULTISELECT_POPOVER,n.popoverClassName),onOpened:this.handlePopoverOpened}),React.createElement("div",{onKeyDown:this.getTagInputKeyDownHandler(r),onKeyUp:this.getTagInputKeyUpHandler(a)},React.createElement(TagInput,Object.assign({placeholder:p},s,{className:classNames(Classes.MULTISELECT,s.className),inputRef:this.refHandlers.input,inputProps:l,inputValue:e.query,onAdd:(e,t)=>{"paste"===t&&i(e)},onInputChange:e.handleQueryChange,onRemove:this.handleTagRemove,values:o.map(this.props.tagRenderer)}))),React.createElement("div",{onKeyDown:r,onKeyUp:a},e.itemList))},this.handleItemSelect=(e,t)=>{null!=this.input&&this.input.focus(),this.props.onItemSelect?.(e,t)},this.handleQueryChange=(e,t)=>{this.setState({isOpen:e.length>0||!this.props.openOnKeyDown}),this.props.onQueryChange?.(e,t)},this.handlePopoverInteraction=(e,t)=>this.requestAnimationFrame((()=>{const s=this.input===document.activeElement;null==this.input||s?this.props.openOnKeyDown||this.setState({isOpen:!0}):this.setState({isOpen:!1}),this.props.popoverProps?.onInteraction?.(e,t)})),this.handlePopoverOpened=e=>{null!=this.queryList&&this.queryList.scrollActiveItemIntoView(),this.props.popoverProps?.onOpened?.(e)},this.handleTagRemove=(e,t)=>{const{selectedItems:s=[],onRemove:n,tagInputProps:o}=this.props;n?.(s[t],t),o?.onRemove?.(e,t)},this.getTagInputKeyDownHandler=e=>t=>{const{which:s}=t;s===Keys.ESCAPE||s===Keys.TAB?(null!=this.input&&this.input.blur(),this.setState({isOpen:!1})):s!==Keys.BACKSPACE&&s!==Keys.ARROW_LEFT&&s!==Keys.ARROW_RIGHT&&this.setState({isOpen:!0});const n=null!=t.target.closest(`.${CoreClasses.TAG_REMOVE}`);this.state.isOpen&&!n&&e?.(t)},this.getTagInputKeyUpHandler=e=>t=>{const s=t.target.classList.contains(Classes.MULTISELECT_TAG_INPUT_INPUT);this.state.isOpen&&s&&e?.(t)}}static ofType(){return MultiSelect}componentDidUpdate(e){e.tagInputProps?.inputRef!==this.props.tagInputProps?.inputRef&&(setRef(e.tagInputProps?.inputRef,null),this.refHandlers.input=refHandler(this,"input",this.props.tagInputProps?.inputRef),setRef(this.props.tagInputProps?.inputRef,this.input))}render(){const{openOnKeyDown:e,popoverProps:t,tagInputProps:s,...n}=this.props;return React.createElement(this.TypedQueryList,Object.assign({},n,{onItemSelect:this.handleItemSelect,onQueryChange:this.handleQueryChange,ref:this.refHandlers.queryList,renderer:this.renderQueryList}))}}MultiSelect.displayName=`${DISPLAYNAME_PREFIX}.MultiSelect`,MultiSelect.defaultProps={fill:!1,placeholder:"Search..."};