import{__extends}from"tslib";import classNames from"classnames";import*as React from"react";import{EditableText}from"@blueprintjs/core";import*as Classes from"../common/classes";var EditableName=function(e){function t(t,a){var n=e.call(this,t,a)||this;return n.handleEdit=function(){n.setState({isEditing:!0,dirtyName:n.state.savedName})},n.handleCancel=function(e){n.setState({isEditing:!1,dirtyName:void 0}),n.invokeCallback(n.props.onCancel,e)},n.handleChange=function(e){n.setState({dirtyName:e}),n.invokeCallback(n.props.onChange,e)},n.handleConfirm=function(e){n.setState({isEditing:!1,savedName:e,dirtyName:void 0}),n.invokeCallback(n.props.onConfirm,e)},n.state={dirtyName:t.name,isEditing:!1,savedName:t.name},n}return __extends(t,e),t.prototype.componentDidUpdate=function(e){var t=this.props.name;t!==e.name&&this.setState({savedName:t,dirtyName:t})},t.prototype.render=function(){var e=this.props,t=e.className,a=e.intent,n=e.name,i=this.state,s=i.isEditing,o=i.dirtyName,r=i.savedName;return React.createElement(EditableText,{className:classNames(t,Classes.TABLE_EDITABLE_NAME),defaultValue:n,intent:a,minWidth:null,onCancel:this.handleCancel,onChange:this.handleChange,onConfirm:this.handleConfirm,onEdit:this.handleEdit,placeholder:"",selectAllOnFocus:!0,value:s?o:r})},t.prototype.invokeCallback=function(e,t){var a=this.props.index;null==e||e(t,a)},t}(React.PureComponent);export{EditableName};