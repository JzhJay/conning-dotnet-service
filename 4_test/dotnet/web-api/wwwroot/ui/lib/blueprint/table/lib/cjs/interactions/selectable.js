"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DragSelectable=void 0;var tslib_1=require("tslib"),React=tslib_1.__importStar(require("react")),core_1=require("@blueprintjs/core"),FocusedCellUtils=tslib_1.__importStar(require("../common/internal/focusedCellUtils")),PlatformUtils=tslib_1.__importStar(require("../common/internal/platformUtils")),utils_1=require("../common/utils"),regions_1=require("../regions"),dragEvents_1=require("./dragEvents"),draggable_1=require("./draggable"),DragSelectable=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.didExpandSelectionOnActivate=!1,n.handleActivate=function(e){var t=n.props,o=t.locateClick,i=t.selectedRegions,l=t.selectedRegionTransform;if(n.shouldIgnoreMouseDown(e))return!1;var a=o(e);if(!regions_1.Regions.isValid(a))return!1;null!=l&&(a=l(a,e));var r=regions_1.Regions.findMatchingRegion(i,a),s=-1!==r;return s&&dragEvents_1.DragEvents.isAdditive(e)?(n.handleClearSelectionAtIndex(r),!1):(s?n.handleClearAllSelectionsNotAtIndex(r):n.shouldExpandSelection(e)?n.handleExpandSelection(a):n.shouldAddDisjointSelection(e)?n.handleAddDisjointSelection(a):n.handleReplaceSelection(a),!0)},n.handleDragMove=function(e,t){var o=n.props,i=o.enableMultipleSelection,l=o.focusedCell,a=o.locateClick,r=o.locateDrag,s=o.selectedRegions,c=o.selectedRegionTransform,d=i?r(e,t,n.didExpandSelectionOnActivate):a(e);if(regions_1.Regions.isValid(d)){null!=c&&(d=c(d,e,t));var u=n.didExpandSelectionOnActivate?n.expandSelectedRegions(s,d,l):regions_1.Regions.update(s,d);if(n.maybeInvokeSelectionCallback(u),!i){var g=u.length-1,p=u[g];n.invokeOnFocusCallbackForRegion(p,g)}}},n.handleDragEnd=function(){n.finishInteraction()},n.handleClick=function(){n.finishInteraction()},n.shouldExpandSelection=function(e){return n.props.enableMultipleSelection&&e.shiftKey},n.shouldAddDisjointSelection=function(e){return n.props.enableMultipleSelection&&dragEvents_1.DragEvents.isAdditive(e)},n.handleClearSelectionAtIndex=function(e){var t=n.props.selectedRegions.slice();if(t.splice(e,1),n.maybeInvokeSelectionCallback(t),t.length>0){var o=t.length-1;n.invokeOnFocusCallbackForRegion(t[o],o)}},n.handleClearAllSelectionsNotAtIndex=function(e){var t=n.props.selectedRegions[e];n.maybeInvokeSelectionCallback([t]),n.invokeOnFocusCallbackForRegion(t,0)},n.handleExpandSelection=function(e){var t=n.props,o=t.focusedCell,i=t.selectedRegions;n.didExpandSelectionOnActivate=!0;var l=n.expandSelectedRegions(i,e,o);n.maybeInvokeSelectionCallback(l),null!=i&&0!==i.length||n.invokeOnFocusCallbackForRegion(e)},n.handleAddDisjointSelection=function(e){var t=n.props.selectedRegions,o=regions_1.Regions.add(t,e);n.maybeInvokeSelectionCallback(o),n.invokeOnFocusCallbackForRegion(e,o.length-1)},n.handleReplaceSelection=function(e){var t=[e];n.maybeInvokeSelectionCallback(t),n.invokeOnFocusCallbackForRegion(e)},n.invokeOnFocusCallbackForRegion=function(e,t){void 0===t&&(t=0);var o=n.props.onFocusedCell,i=regions_1.Regions.getFocusCellCoordinatesFromRegion(e);o(FocusedCellUtils.toFullCoordinates(i,t))},n.finishInteraction=function(){var e,t;null===(t=(e=n.props).onSelectionEnd)||void 0===t||t.call(e,n.props.selectedRegions),n.didExpandSelectionOnActivate=!1,n.lastEmittedSelectedRegions=null},n}return tslib_1.__extends(n,e),n.prototype.render=function(){var e=this.getDraggableProps();return React.createElement(draggable_1.Draggable,tslib_1.__assign({},e,{preventDefault:!1}),this.props.children)},n.prototype.getDraggableProps=function(){return null==this.props.onSelection?{}:{onActivate:this.handleActivate,onClick:this.handleClick,onDragEnd:this.handleDragEnd,onDragMove:this.handleDragMove}},n.prototype.shouldIgnoreMouseDown=function(e){var n=this.props,t=n.disabled,o=n.ignoredSelectors,i=void 0===o?[]:o,l=e.target,a=utils_1.Utils.isLeftClick(e),r=a&&e.ctrlKey&&PlatformUtils.isMac(),s="function"==typeof t?t(e):t;return!a||r||s||i.some((function(e){return null!=l.closest(e)}))},n.prototype.maybeInvokeSelectionCallback=function(e){var n=this.props.onSelection;null!=this.lastEmittedSelectedRegions&&core_1.Utils.deepCompareKeys(this.lastEmittedSelectedRegions,e)||(n(e),this.lastEmittedSelectedRegions=e)},n.prototype.expandSelectedRegions=function(e,n,t){if(0===e.length)return[n];if(null!=t){var o=FocusedCellUtils.expandFocusedRegion(t,n);return regions_1.Regions.update(e,o)}return o=regions_1.Regions.expandRegion(e[e.length-1],n),regions_1.Regions.update(e,o)},n.defaultProps={disabled:!1,enableMultipleSelection:!1,selectedRegions:[]},n}(React.PureComponent);exports.DragSelectable=DragSelectable;