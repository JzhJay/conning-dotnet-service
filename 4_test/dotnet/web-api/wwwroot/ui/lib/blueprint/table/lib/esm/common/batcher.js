import{requestIdleCallback}from"./requestIdleCallback";var Batcher=function(){function t(){var t=this;this.currentObjects={},this.oldObjects={},this.batchArgs={},this.done=!0,this.handleIdleCallback=function(){var e=t.callback;delete t.callback,null==e||e()},this.mapCurrentObjectKey=function(e){return t.currentObjects[e]}}return t.prototype.reset=function(){this.batchArgs={},this.oldObjects=this.currentObjects,this.currentObjects={}},t.prototype.startNewBatch=function(){this.batchArgs={}},t.prototype.addArgsToBatch=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this.batchArgs[this.getKey(t)]=t},t.prototype.removeOldAddNew=function(e,r,s,c){var n=this;void 0===r&&(r=t.DEFAULT_ADD_LIMIT),void 0===s&&(s=t.DEFAULT_REMOVE_LIMIT),void 0===c&&(c=t.DEFAULT_UPDATE_LIMIT),this.setKeysDifference(this.currentObjects,this.batchArgs,s).forEach((function(t){return delete n.currentObjects[t]})),this.setKeysDifference(this.oldObjects,this.batchArgs,-1).forEach((function(t){return delete n.oldObjects[t]})),Object.keys(this.oldObjects).forEach((function(t){null==n.currentObjects[t]&&(n.currentObjects[t]=n.oldObjects[t])})),this.setKeysIntersection(this.oldObjects,this.currentObjects,c).forEach((function(t){delete n.oldObjects[t],n.currentObjects[t]=e.apply(void 0,n.batchArgs[t])})),this.setKeysDifference(this.batchArgs,this.currentObjects,r).forEach((function(t){return n.currentObjects[t]=e.apply(void 0,n.batchArgs[t])})),this.done=this.setHasSameKeys(this.batchArgs,this.currentObjects)&&0===Object.keys(this.oldObjects).length},t.prototype.isDone=function(){return this.done},t.prototype.getList=function(){return Object.keys(this.currentObjects).map(this.mapCurrentObjectKey)},t.prototype.idleCallback=function(t){this.callback||(this.callback=t,requestIdleCallback(this.handleIdleCallback))},t.prototype.cancelOutstandingCallback=function(){delete this.callback},t.prototype.setList=function(t,e){var r=this;this.reset(),t.forEach((function(t,s){r.addArgsToBatch.apply(r,t),r.currentObjects[r.getKey(t)]=e[s]})),this.done=!0},t.prototype.getKey=function(e){return e.join(t.ARG_DELIMITER)},t.prototype.setKeysDifference=function(t,e,r){return this.setKeysOperation(t,e,"difference",r)},t.prototype.setKeysIntersection=function(t,e,r){return this.setKeysOperation(t,e,"intersect",r)},t.prototype.setKeysOperation=function(t,e,r,s){for(var c=[],n=Object.keys(t),i=0;i<n.length&&(s<0||c.length<s);i++){var o=n[i];("difference"===r&&t[o]&&!e[o]||"intersect"===r&&t[o]&&e[o])&&c.push(o)}return c},t.prototype.setHasSameKeys=function(t,e){var r=Object.keys(t),s=Object.keys(e);if(r.length!==s.length)return!1;for(var c=0,n=r;c<n.length;c++)if(void 0===e[n[c]])return!1;return!0},t.DEFAULT_ADD_LIMIT=20,t.DEFAULT_UPDATE_LIMIT=20,t.DEFAULT_REMOVE_LIMIT=20,t.ARG_DELIMITER="|",t}();export{Batcher};