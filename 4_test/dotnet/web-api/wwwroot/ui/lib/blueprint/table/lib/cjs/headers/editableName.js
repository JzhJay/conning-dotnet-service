"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.EditableName=void 0;var tslib_1=require("tslib"),classnames_1=tslib_1.__importDefault(require("classnames")),React=tslib_1.__importStar(require("react")),core_1=require("@blueprintjs/core"),Classes=tslib_1.__importStar(require("../common/classes")),EditableName=function(e){function t(t,a){var i=e.call(this,t,a)||this;return i.handleEdit=function(){i.setState({isEditing:!0,dirtyName:i.state.savedName})},i.handleCancel=function(e){i.setState({isEditing:!1,dirtyName:void 0}),i.invokeCallback(i.props.onCancel,e)},i.handleChange=function(e){i.setState({dirtyName:e}),i.invokeCallback(i.props.onChange,e)},i.handleConfirm=function(e){i.setState({isEditing:!1,savedName:e,dirtyName:void 0}),i.invokeCallback(i.props.onConfirm,e)},i.state={dirtyName:t.name,isEditing:!1,savedName:t.name},i}return tslib_1.__extends(t,e),t.prototype.componentDidUpdate=function(e){var t=this.props.name;t!==e.name&&this.setState({savedName:t,dirtyName:t})},t.prototype.render=function(){var e=this.props,t=e.className,a=e.intent,i=e.name,n=this.state,s=n.isEditing,r=n.dirtyName,l=n.savedName;return React.createElement(core_1.EditableText,{className:classnames_1.default(t,Classes.TABLE_EDITABLE_NAME),defaultValue:i,intent:a,minWidth:null,onCancel:this.handleCancel,onChange:this.handleChange,onConfirm:this.handleConfirm,onEdit:this.handleEdit,placeholder:"",selectAllOnFocus:!0,value:s?r:l})},t.prototype.invokeCallback=function(e,t){var a=this.props.index;null==e||e(t,a)},t}(React.PureComponent);exports.EditableName=EditableName;