export class Rect{constructor(t,e,i,h){this.left=t,this.top=e,this.width=i,this.height=h}static union(t,e){const i=Rect.wrap(t),h=Rect.wrap(e),s=Math.min(i.top,h.top),n=Math.min(i.left,h.left),r=Math.max(i.top+i.height,h.top+h.height),c=Math.max(i.left+i.width,h.left+h.width);return new Rect(n,s,c-n,r-s)}static subtractOrigin(t,e){const i=Rect.wrap(t),h=Rect.wrap(e);return new Rect(i.left-h.left,i.top-h.top,i.width,i.height)}static style(t){return{height:`${t.height}px`,left:`${t.left}px`,position:"absolute",top:`${t.top}px`,width:`${t.width}px`}}static wrap(t){return t instanceof Rect?t:new Rect(t.left,t.top,t.width,t.height)}subtractOrigin(t){return Rect.subtractOrigin(this,t)}union(t){return Rect.union(this,t)}style(){return Rect.style(this)}sizeStyle(){return{height:`${this.height}px`,width:`${this.width}px`}}containsX(t){return t>=this.left&&t<=this.left+this.width}containsY(t){return t>=this.top&&t<=this.top+this.height}equals(t){return null!=t&&this.left===t.left&&this.top===t.top&&this.width===t.width&&this.height===t.height}}Rect.ORIGIN=new Rect(0,0,0,0);