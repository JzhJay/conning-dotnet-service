"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DragReorderable=void 0;var tslib_1=require("tslib"),React=tslib_1.__importStar(require("react")),core_1=require("@blueprintjs/core"),utils_1=require("../common/utils"),regions_1=require("../regions"),draggable_1=require("./draggable"),DragReorderable=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.handleActivate=function(e){if(r.shouldIgnoreMouseDown(e))return!1;var o=r.props.locateClick(e);if(!regions_1.Regions.isValid(o))return!1;var t=regions_1.Regions.getRegionCardinality(o),n=t===regions_1.RegionCardinality.FULL_COLUMNS,i=t===regions_1.RegionCardinality.FULL_ROWS;if(!n&&!i)return!1;var s=r.props.selectedRegions,a=regions_1.Regions.findContainingRegion(s,o);if(a>=0){var l=s[a];if(regions_1.Regions.getRegionCardinality(l)!==t)return!1;var g=i?l.rows:l.cols;r.selectedRegionStartIndex=g[0],r.selectedRegionLength=g[1]-g[0]+1}else{r.maybeSelectRegion(o);var d=i?o.rows:o.cols;r.selectedRegionStartIndex=d[0],r.selectedRegionLength=d[1]-d[0]+1}return!0},r.handleDragMove=function(e,o){var t=r.selectedRegionStartIndex,n=r.props.locateDrag(e,o),i=r.selectedRegionLength,s=utils_1.Utils.guideIndexToReorderedIndex(t,n,i);r.props.onReordering(t,s,i)},r.handleDragEnd=function(e,o){var t=r.selectedRegionStartIndex,n=r.props.locateDrag(e,o),i=r.selectedRegionLength,s=utils_1.Utils.guideIndexToReorderedIndex(t,n,i);r.props.onReordered(t,s,i);var a=r.props.toRegion(s,s+i-1);r.maybeSelectRegion(a),r.selectedRegionStartIndex=void 0,r.selectedRegionLength=void 0},r}return tslib_1.__extends(r,e),r.prototype.render=function(){var e=this.getDraggableProps();return React.createElement(draggable_1.Draggable,tslib_1.__assign({},e,{preventDefault:!1}),this.props.children)},r.prototype.getDraggableProps=function(){return null==this.props.onReordered?{}:{onActivate:this.handleActivate,onDragEnd:this.handleDragEnd,onDragMove:this.handleDragMove}},r.prototype.shouldIgnoreMouseDown=function(e){var r=this.props.disabled,o=core_1.Utils.isFunction(r)?null==r?void 0:r(e):r;return!utils_1.Utils.isLeftClick(e)||o},r.prototype.maybeSelectRegion=function(e){var r=[e];core_1.Utils.deepCompareKeys(r,this.props.selectedRegions)||(this.props.onSelection(r),this.props.onFocusedCell(tslib_1.__assign(tslib_1.__assign({},regions_1.Regions.getFocusCellCoordinatesFromRegion(e)),{focusSelectionIndex:0})))},r.defaultProps={selectedRegions:[]},r}(React.PureComponent);exports.DragReorderable=DragReorderable;