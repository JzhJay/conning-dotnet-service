import{RegionCardinality,Regions}from"../../regions";import{Direction}from"../direction";import*as DirectionUtils from"./directionUtils";import*as FocusedCellUtils from"./focusedCellUtils";export function resizeRegion(i,o,e){if(Regions.getRegionCardinality(i)===RegionCardinality.FULL_TABLE)return i;const t=Regions.copy(i);let l=0,s=0;if(null!=e){const i=FocusedCellUtils.isFocusedCellAtRegionTop(t,e),n=FocusedCellUtils.isFocusedCellAtRegionBottom(t,e),r=FocusedCellUtils.isFocusedCellAtRegionLeft(t,e),c=FocusedCellUtils.isFocusedCellAtRegionRight(t,e);o===Direction.UP?l=i&&!n?1:0:o===Direction.DOWN?l=n&&!i?0:1:s=o===Direction.LEFT?r&&!c?1:0:c&&!r?0:1}else l=o===Direction.DOWN?1:0,s=o===Direction.RIGHT?1:0;const n=DirectionUtils.directionToDelta(o);return null!=t.rows&&(t.rows[l]+=n.rows),null!=t.cols&&(t.cols[s]+=n.cols),t}