var Table_1;import{__decorate}from"tslib";import classNames from"classnames";import*as React from"react";import{polyfill}from"react-lifecycles-compat";import{AbstractComponent2,DISPLAYNAME_PREFIX,Hotkey,Hotkeys,HotkeysTarget,Utils as CoreUtils}from"@blueprintjs/core";import{Column}from"./column";import*as Classes from"./common/classes";import{columnInteractionBarContextTypes}from"./common/context";import*as Errors from"./common/errors";import{Grid}from"./common/grid";import*as FocusedCellUtils from"./common/internal/focusedCellUtils";import*as ScrollUtils from"./common/internal/scrollUtils";import{Rect}from"./common/rect";import{RenderMode}from"./common/renderMode";import{Utils}from"./common/utils";import{ColumnHeader}from"./headers/columnHeader";import{ColumnHeaderCell}from"./headers/columnHeaderCell";import{renderDefaultRowHeader,RowHeader}from"./headers/rowHeader";import{ResizeSensor}from"./interactions/resizeSensor";import{GuideLayer}from"./layers/guides";import{RegionLayer}from"./layers/regions";import{Locator}from"./locator";import{QuadrantType}from"./quadrants/tableQuadrant";import{TableQuadrantStack}from"./quadrants/tableQuadrantStack";import{ColumnLoadingOption,RegionCardinality,Regions,SelectionModes,TableLoadingOption}from"./regions";import{resizeRowsByApproximateHeight,resizeRowsByTallestCell}from"./resizeRows";import{TableBody}from"./tableBody";import{TableHotkeys}from"./tableHotkeys";import{clampNumFrozenColumns,clampNumFrozenRows,hasLoadingOption}from"./tableUtils";let Table=Table_1=class extends AbstractComponent2{constructor(e,t){super(e,t),this.refHandlers={cellContainer:e=>this.cellContainerElement=e,columnHeader:e=>this.columnHeaderElement=e,quadrantStack:e=>this.quadrantStackInstance=e,rootTable:e=>this.rootTableElement=e,rowHeader:e=>this.rowHeaderElement=e,scrollContainer:e=>this.scrollContainerElement=e},this.didCompletelyMount=!1,this.renderMenu=e=>{const t=classNames(Classes.TABLE_MENU,{[Classes.TABLE_SELECTION_ENABLED]:Table_1.isSelectionModeEnabled(this.props,RegionCardinality.FULL_TABLE)});return React.createElement("div",{className:t,ref:e,onMouseDown:this.handleMenuMouseDown},this.maybeRenderRegions(this.styleMenuRegion))},this.handleMenuMouseDown=e=>{this.selectAll(!e.shiftKey)},this.selectAll=e=>{if(this.getEnabledSelectionHandler(RegionCardinality.FULL_TABLE)([Regions.table()]),e){const e=Regions.getFocusCellCoordinatesFromRegion(Regions.table());this.handleFocus(FocusedCellUtils.toFullCoordinates(e))}},this.columnHeaderCellRenderer=e=>{const t=this.getColumnProps(e);if(void 0===t)return null;const{id:o,loadingOptions:n,cellRenderer:l,columnHeaderCellRenderer:s,...i}=t,r=hasLoadingOption(n,ColumnLoadingOption.HEADER);if(null!=s){const t=s(e),o=t.props.loading,n={loading:null!=o?o:r};return React.cloneElement(t,n)}const a={index:e,loading:r,...i};return null!=t.name?React.createElement(ColumnHeaderCell,Object.assign({},a)):React.createElement(ColumnHeaderCell,Object.assign({},a,{name:Utils.toBase26Alpha(e)}))},this.renderColumnHeader=(e,t,o,n=!1)=>{const{focusedCell:l,selectedRegions:s,viewportRect:i}=this.state,{enableMultipleSelection:r,enableGhostCells:a,enableColumnReordering:d,enableColumnResizing:h,loadingOptions:c,maxColumnWidth:u,minColumnWidth:m,selectedRegionTransform:R}=this.props,p=classNames(Classes.TABLE_COLUMN_HEADERS,{[Classes.TABLE_SELECTION_ENABLED]:Table_1.isSelectionModeEnabled(this.props,RegionCardinality.FULL_COLUMNS)}),g=this.grid.getColumnIndicesInRect(i,a),C=n?0:g.columnIndexStart,E=n?this.getMaxFrozenColumnIndex():g.columnIndexEnd;return React.createElement("div",{className:p},React.createElement(ColumnHeader,{enableMultipleSelection:r,cellRenderer:this.columnHeaderCellRenderer,focusedCell:l,grid:this.grid,isReorderable:d,isResizable:h,loading:hasLoadingOption(c,TableLoadingOption.COLUMN_HEADERS),locator:this.locator,maxColumnWidth:u,measurableElementRef:e,minColumnWidth:m,onColumnWidthChanged:this.handleColumnWidthChanged,onFocusedCell:this.handleFocus,onLayoutLock:this.handleLayoutLock,onReordered:this.handleColumnsReordered,onReordering:o,onResizeGuide:t,onSelection:this.getEnabledSelectionHandler(RegionCardinality.FULL_COLUMNS),selectedRegions:s,selectedRegionTransform:R,columnIndexStart:C,columnIndexEnd:E},this.props.children),this.maybeRenderRegions(this.styleColumnHeaderRegion))},this.renderRowHeader=(e,t,o,n=!1)=>{const{focusedCell:l,selectedRegions:s,viewportRect:i}=this.state,{enableMultipleSelection:r,enableGhostCells:a,enableRowReordering:d,enableRowResizing:h,loadingOptions:c,maxRowHeight:u,minRowHeight:m,rowHeaderCellRenderer:R,selectedRegionTransform:p}=this.props,g=classNames(Classes.TABLE_ROW_HEADERS,{[Classes.TABLE_SELECTION_ENABLED]:Table_1.isSelectionModeEnabled(this.props,RegionCardinality.FULL_ROWS)}),C=this.grid.getRowIndicesInRect(i,a),E=n?0:C.rowIndexStart,y=n?this.getMaxFrozenRowIndex():C.rowIndexEnd;return React.createElement("div",{className:g,ref:e},React.createElement(RowHeader,{enableMultipleSelection:r,focusedCell:l,grid:this.grid,locator:this.locator,isReorderable:d,isResizable:h,loading:hasLoadingOption(c,TableLoadingOption.ROW_HEADERS),maxRowHeight:u,minRowHeight:m,onFocusedCell:this.handleFocus,onLayoutLock:this.handleLayoutLock,onResizeGuide:t,onReordered:this.handleRowsReordered,onReordering:o,onRowHeightChanged:this.handleRowHeightChanged,onSelection:this.getEnabledSelectionHandler(RegionCardinality.FULL_ROWS),rowHeaderCellRenderer:R,selectedRegions:s,selectedRegionTransform:p,rowIndexStart:E,rowIndexEnd:y}),this.maybeRenderRegions(this.styleRowHeaderRegion))},this.bodyCellRenderer=(e,t)=>{const o=this.getColumnProps(t);if(void 0===o)return null;const{id:n,loadingOptions:l,cellRenderer:s,columnHeaderCellRenderer:i,name:r,nameRenderer:a,...d}=o,h=s(e,t),{loading:c=hasLoadingOption(l,ColumnLoadingOption.CELLS)}=h.props,u={...d,loading:c};return React.cloneElement(h,u)},this.renderBody=(e,t=!1,o=!1)=>{const{focusedCell:n,numFrozenColumnsClamped:l,numFrozenRowsClamped:s,selectedRegions:i,viewportRect:r}=this.state,{enableMultipleSelection:a,enableGhostCells:d,loadingOptions:h,bodyContextMenuRenderer:c,selectedRegionTransform:u}=this.props,m=this.grid.getRowIndicesInRect(r,d),R=this.grid.getColumnIndicesInRect(r,d),p=o?0:R.columnIndexStart+l,g=t?0:m.rowIndexStart+s,C=o?l-1:R.columnIndexEnd,E=t?s-1:m.rowIndexEnd,y=e===QuadrantType.MAIN?this.handleCompleteRender:void 0;return React.createElement("div",null,React.createElement(TableBody,{enableMultipleSelection:a,cellRenderer:this.bodyCellRenderer,focusedCell:n,grid:this.grid,loading:hasLoadingOption(h,TableLoadingOption.CELLS),locator:this.locator,onCompleteRender:y,onFocusedCell:this.handleFocus,onSelection:this.getEnabledSelectionHandler(RegionCardinality.CELLS),bodyContextMenuRenderer:c,renderMode:this.getNormalizedRenderMode(),selectedRegions:i,selectedRegionTransform:u,viewportRect:r,columnIndexStart:p,columnIndexEnd:C,rowIndexStart:g,rowIndexEnd:E,numFrozenColumns:o?l:void 0,numFrozenRows:t?s:void 0}),this.maybeRenderRegions(this.styleBodyRegion,e))},this.getEnabledSelectionHandler=e=>Table_1.isSelectionModeEnabled(this.props,e)?this.handleSelection:this.clearSelection,this.handleCompleteRender=()=>{null!=this.state.viewportRect&&(this.props.onCompleteRender?.(),this.didCompletelyMount=!0)},this.styleBodyRegion=(e,t)=>{const{numFrozenColumns:o}=this.props,n=Regions.getRegionCardinality(e),l=this.grid.getRegionStyle(e),s=(t===QuadrantType.TOP_LEFT||t===QuadrantType.LEFT)&&null!=o&&o>0,i=this.grid.getHeight(),r=this.grid.getWidth(),a="-1px";switch(n){case RegionCardinality.CELLS:return l;case RegionCardinality.FULL_COLUMNS:return l.top=a,l.height=i+1,l;case RegionCardinality.FULL_ROWS:return l.left=a,l.width=r+1,s&&(l.right=a),l;case RegionCardinality.FULL_TABLE:return l.left=a,l.top=a,l.width=r+1,l.height=i+1,s&&(l.right=a),l;default:return{display:"none"}}},this.styleMenuRegion=e=>{const{viewportRect:t}=this.state;if(null==t)return{};const o=Regions.getRegionCardinality(e),n=this.grid.getRegionStyle(e);return o===RegionCardinality.FULL_TABLE?(n.right="0px",n.bottom="0px",n.top="0px",n.left="0px",n.borderBottom="none",n.borderRight="none",n):{display:"none"}},this.styleColumnHeaderRegion=e=>{const{viewportRect:t}=this.state;if(null==t)return{};const o=Regions.getRegionCardinality(e),n=this.grid.getRegionStyle(e);switch(o){case RegionCardinality.FULL_TABLE:return n.left="-1px",n.borderLeft="none",n.bottom="-1px",n;case RegionCardinality.FULL_COLUMNS:return n.bottom="-1px",n;default:return{display:"none"}}},this.styleRowHeaderRegion=e=>{const{viewportRect:t}=this.state;if(null==t)return{};const o=Regions.getRegionCardinality(e),n=this.grid.getRegionStyle(e);switch(o){case RegionCardinality.FULL_TABLE:return n.top="-1px",n.borderTop="none",n.right="-1px",n;case RegionCardinality.FULL_ROWS:return n.right="-1px",n;default:return{display:"none"}}},this.handleColumnWidthChanged=(e,t)=>{const o=this.state.selectedRegions,n=this.state.columnWidths.slice();if(Regions.hasFullTable(o))for(let e=0;e<n.length;e++)n[e]=t;Regions.hasFullColumn(o,e)?Regions.eachUniqueFullColumn(o,(e=>{n[e]=t})):n[e]=t,this.invalidateGrid(),this.setState({columnWidths:n});const{onColumnWidthChanged:l}=this.props;null!=l&&l(e,t)},this.handleRowHeightChanged=(e,t)=>{const o=this.state.selectedRegions,n=this.state.rowHeights.slice();if(Regions.hasFullTable(o))for(let e=0;e<n.length;e++)n[e]=t;Regions.hasFullRow(o,e)?Regions.eachUniqueFullRow(o,(e=>{n[e]=t})):n[e]=t,this.invalidateGrid(),this.setState({rowHeights:n});const{onRowHeightChanged:l}=this.props;null!=l&&l(e,t)},this.handleRootScroll=e=>{null!=this.rootTableElement&&(this.rootTableElement.scrollLeft=0,this.rootTableElement.scrollTop=0)},this.handleBodyScroll=e=>{if(e.stopPropagation(),null!=this.locator&&!this.state.isLayoutLocked){const e=this.locator.getViewportRect();this.updateViewportRect(e)}},this.clearSelection=e=>{this.handleSelection([])},this.syncViewportPosition=({nextScrollLeft:e,nextScrollTop:t})=>{const{viewportRect:o}=this.state;if(void 0!==e||void 0!==t){if(void 0!==t){const e=this.shouldDisableVerticalScroll()?0:this.columnHeaderElement.clientHeight;this.scrollContainerElement.scrollTop=t+e}if(void 0!==e){const t=this.shouldDisableHorizontalScroll()||null==this.rowHeaderElement?0:this.rowHeaderElement.clientWidth;this.scrollContainerElement.scrollLeft=e+t}const n=new Rect(e,t,o.width,o.height);this.updateViewportRect(n)}},this.handleFocus=e=>{this.props.enableFocusedCell&&(null==this.props.focusedCell&&this.setState({focusedCell:e}),this.props.onFocusedCell?.(e))},this.handleSelection=e=>{null==this.props.selectedRegions&&this.setState({selectedRegions:e});const{onSelection:t}=this.props;null!=t&&t(e)},this.handleColumnsReordering=e=>{this.setState({isReordering:!0,verticalGuides:e})},this.handleColumnsReordered=(e,t,o)=>{this.setState({isReordering:!1,verticalGuides:void 0}),this.props.onColumnsReordered?.(e,t,o)},this.handleRowsReordering=e=>{this.setState({isReordering:!0,horizontalGuides:e})},this.handleRowsReordered=(e,t,o)=>{this.setState({isReordering:!1,horizontalGuides:void 0}),this.props.onRowsReordered?.(e,t,o)},this.handleLayoutLock=(e=!1)=>{this.setState({isLayoutLocked:e})},this.updateViewportRect=e=>{const{viewportRect:t}=this.state;this.setState({viewportRect:e}),(null!=t&&!t.equals(e)||null==t&&null!=e)&&this.invokeOnVisibleCellsChangeCallback(e)},this.getMaxFrozenColumnIndex=()=>{const{numFrozenColumnsClamped:e}=this.state;return null!=e?e-1:void 0},this.getMaxFrozenRowIndex=()=>{const{numFrozenRowsClamped:e}=this.state;return null!=e?e-1:void 0},this.handleColumnResizeGuide=e=>{this.setState({verticalGuides:e})},this.handleRowResizeGuide=e=>{this.setState({horizontalGuides:e})};const{children:o,columnWidths:n,defaultRowHeight:l,defaultColumnWidth:s,numRows:i,rowHeights:r}=this.props,a=React.Children.toArray(o),d=Table_1.createColumnIdIndex(a);let h=a.map((()=>s));h=Utils.assignSparseValues(h,n);let c=Utils.times(i,(()=>l));c=Utils.assignSparseValues(c,r);const u=null==e.selectedRegions?[]:e.selectedRegions,m=FocusedCellUtils.getInitialFocusedCell(e.enableFocusedCell,e.focusedCell,void 0,u);this.state={childrenArray:a,columnIdToIndex:d,columnWidths:h,focusedCell:m,isLayoutLocked:!1,isReordering:!1,numFrozenColumnsClamped:clampNumFrozenColumns(e),numFrozenRowsClamped:clampNumFrozenRows(e),rowHeights:c,selectedRegions:u},this.hotkeysImpl=new TableHotkeys(e,this.state,this.grid,{getEnabledSelectionHandler:this.getEnabledSelectionHandler,handleFocus:this.handleFocus,handleSelection:this.handleSelection,syncViewportPosition:this.syncViewportPosition})}static getDerivedStateFromProps(e,t){const{children:o,defaultColumnWidth:n,defaultRowHeight:l,enableFocusedCell:s,focusedCell:i,numRows:r,selectedRegions:a,selectionModes:d}=e;let{columnWidths:h,rowHeights:c}=e;null==h&&(h=t.columnWidths),null==c&&(c=t.rowHeights);const u=React.Children.toArray(o),m=u!==t.childrenArray,R=u.length;let p=h;if(h!==t.columnWidths||m){const e=u.map(((e,o)=>{const n=t.columnIdToIndex[e.props.id];return t.columnWidths[null!=n?n:o]}));p=Utils.arrayOfLength(p,R,n),p=Utils.assignSparseValues(p,e),p=Utils.assignSparseValues(p,h)}let g=c;c===t.rowHeights&&r===t.rowHeights.length||(g=Utils.arrayOfLength(g,r,l),g=Utils.assignSparseValues(g,c));let C=a;null==a&&(C=t.selectedRegions.filter((t=>{const o=Regions.getRegionCardinality(t);return Table_1.isSelectionModeEnabled(e,o,d)&&Regions.isRegionValidForTable(t,r,R)})));const E=FocusedCellUtils.getInitialFocusedCell(s,i,t.focusedCell,C),y={childrenArray:u,columnIdToIndex:m?Table_1.createColumnIdIndex(u):t.columnIdToIndex,columnWidths:p,focusedCell:E,numFrozenColumnsClamped:clampNumFrozenColumns(e),numFrozenRowsClamped:clampNumFrozenRows(e),rowHeights:g,selectedRegions:C};return CoreUtils.deepCompareKeys(t,y,Table_1.SHALLOW_COMPARE_STATE_KEYS_DENYLIST)?null:y}static createColumnIdIndex(e){const t={};for(let o=0;o<e.length;o++){const n=e[o].props.id;null!=n&&(t[String(n)]=o)}return t}static isSelectionModeEnabled(e,t,o=e.selectionModes){const{children:n,numRows:l}=e,s=React.Children.count(n);return o.indexOf(t)>=0&&l>0&&s>0}resizeRowsByApproximateHeight(e,t){const o=resizeRowsByApproximateHeight(this.props.numRows,this.state.columnWidths,e,t);this.invalidateGrid(),this.setState({rowHeights:o})}resizeRowsByTallestCell(e){const t=resizeRowsByTallestCell(this.grid,this.state.viewportRect,this.locator,this.state.rowHeights.length,e);this.invalidateGrid(),this.setState({rowHeights:t})}scrollToRegion(e){const{numFrozenColumnsClamped:t,numFrozenRowsClamped:o}=this.state,{left:n,top:l}=this.state.viewportRect,{scrollLeft:s,scrollTop:i}=ScrollUtils.getScrollPositionForRegion(e,n,l,this.grid.getCumulativeWidthBefore,this.grid.getCumulativeHeightBefore,o,t),r=this.shouldDisableHorizontalScroll()?0:s,a=this.shouldDisableVerticalScroll()?0:i;this.quadrantStackInstance.scrollToPosition(r,a)}getChildContext(){return{enableColumnInteractionBar:this.props.enableColumnInteractionBar}}shouldComponentUpdate(e,t){const o={exclude:Table_1.SHALLOW_COMPARE_PROP_KEYS_DENYLIST},n={exclude:Table_1.SHALLOW_COMPARE_STATE_KEYS_DENYLIST};return!(CoreUtils.shallowCompareKeys(this.props,e,o)&&CoreUtils.shallowCompareKeys(this.state,t,n)&&CoreUtils.deepCompareKeys(this.props,e,Table_1.SHALLOW_COMPARE_PROP_KEYS_DENYLIST)&&CoreUtils.deepCompareKeys(this.state,t,Table_1.SHALLOW_COMPARE_STATE_KEYS_DENYLIST))}render(){const{children:e,className:t,enableRowHeader:o,loadingOptions:n,numRows:l,enableColumnInteractionBar:s}=this.props,{horizontalGuides:i,numFrozenColumnsClamped:r,numFrozenRowsClamped:a,verticalGuides:d}=this.state;this.gridDimensionsMatchProps()||this.invalidateGrid(),this.validateGrid();const h=classNames(Classes.TABLE_CONTAINER,{[Classes.TABLE_REORDERING]:this.state.isReordering,[Classes.TABLE_NO_VERTICAL_SCROLL]:this.shouldDisableVerticalScroll(),[Classes.TABLE_NO_HORIZONTAL_SCROLL]:this.shouldDisableHorizontalScroll(),[Classes.TABLE_SELECTION_ENABLED]:Table_1.isSelectionModeEnabled(this.props,RegionCardinality.CELLS),[Classes.TABLE_NO_ROWS]:0===l},t);return React.createElement("div",{className:h,ref:this.refHandlers.rootTable,onScroll:this.handleRootScroll},React.createElement(TableQuadrantStack,{bodyRef:this.refHandlers.cellContainer,bodyRenderer:this.renderBody,columnHeaderCellRenderer:this.renderColumnHeader,columnHeaderRef:this.refHandlers.columnHeader,enableColumnInteractionBar:s,enableRowHeader:o,grid:this.grid,handleColumnResizeGuide:this.handleColumnResizeGuide,handleColumnsReordering:this.handleColumnsReordering,handleRowResizeGuide:this.handleRowResizeGuide,handleRowsReordering:this.handleRowsReordering,isHorizontalScrollDisabled:this.shouldDisableHorizontalScroll(),isVerticalScrollDisabled:this.shouldDisableVerticalScroll(),loadingOptions:n,numColumns:React.Children.count(e),numFrozenColumns:r,numFrozenRows:a,numRows:l,onScroll:this.handleBodyScroll,ref:this.refHandlers.quadrantStack,menuRenderer:this.renderMenu,rowHeaderCellRenderer:this.renderRowHeader,rowHeaderRef:this.refHandlers.rowHeader,scrollContainerRef:this.refHandlers.scrollContainer}),React.createElement("div",{className:classNames(Classes.TABLE_OVERLAY_LAYER,Classes.TABLE_OVERLAY_REORDERING_CURSOR)}),React.createElement(GuideLayer,{className:Classes.TABLE_RESIZE_GUIDES,verticalGuides:d,horizontalGuides:i}))}renderHotkeys(){const e=[this.maybeRenderCopyHotkey(),this.maybeRenderSelectAllHotkey(),this.maybeRenderFocusHotkeys(),this.maybeRenderSelectionResizeHotkeys()];return React.createElement(Hotkeys,null,e.filter((e=>void 0!==e)))}componentDidMount(){this.validateGrid(),this.locator=new Locator(this.rootTableElement,this.scrollContainerElement,this.cellContainerElement),this.updateLocator(),this.updateViewportRect(this.locator.getViewportRect()),this.resizeSensorDetach=ResizeSensor.attach(this.rootTableElement,(()=>{this.state.isLayoutLocked||this.updateViewportRect(this.locator.getViewportRect())}))}componentWillUnmount(){null!=this.resizeSensorDetach&&(this.resizeSensorDetach(),delete this.resizeSensorDetach),this.didCompletelyMount=!1}getSnapshotBeforeUpdate(){const{viewportRect:e}=this.state;this.validateGrid();const t=this.grid.getCumulativeHeightAt(this.grid.numRows-1),o=this.grid.getCumulativeWidthAt(this.grid.numCols-1),n=t<e.top+e.height?Math.max(0,t-e.height):void 0;return{nextScrollLeft:o<e.left+e.width?Math.max(0,o-e.width):void 0,nextScrollTop:n}}componentDidUpdate(e,t,o){super.componentDidUpdate(e,t,o),this.hotkeysImpl.setState(this.state),this.hotkeysImpl.setProps(this.props),(React.Children.toArray(this.props.children)!==this.state.childrenArray||this.props.columnWidths!==t.columnWidths||this.props.rowHeights!==t.rowHeights||this.props.numRows!==e.numRows||this.props.forceRerenderOnSelectionChange&&this.props.selectedRegions!==e.selectedRegions)&&this.invalidateGrid(),null!=this.locator&&(this.validateGrid(),this.updateLocator()),(!CoreUtils.arraysEqual(this.state.columnWidths,t.columnWidths)||!CoreUtils.arraysEqual(this.state.rowHeights,t.rowHeights))&&(this.quadrantStackInstance.synchronizeQuadrantViews(),this.syncViewportPosition(o))}validateProps(e){const{children:t,columnWidths:o,numFrozenColumns:n,numFrozenRows:l,numRows:s,rowHeights:i}=e,r=React.Children.count(t);if(null!=s&&s<0)throw new Error(Errors.TABLE_NUM_ROWS_NEGATIVE);if(null!=l&&l<0)throw new Error(Errors.TABLE_NUM_FROZEN_ROWS_NEGATIVE);if(null!=n&&n<0)throw new Error(Errors.TABLE_NUM_FROZEN_COLUMNS_NEGATIVE);if(null!=s&&null!=i&&i.length!==s)throw new Error(Errors.TABLE_NUM_ROWS_ROW_HEIGHTS_MISMATCH);if(null!=r&&null!=o&&o.length!==r)throw new Error(Errors.TABLE_NUM_COLUMNS_COLUMN_WIDTHS_MISMATCH);React.Children.forEach(t,(e=>{if(!CoreUtils.isElementOfType(e,Column))throw new Error(Errors.TABLE_NON_COLUMN_CHILDREN_WARNING)})),null!=l&&null!=s&&l>s&&console.warn(Errors.TABLE_NUM_FROZEN_ROWS_BOUND_WARNING),null!=n&&n>r&&console.warn(Errors.TABLE_NUM_FROZEN_COLUMNS_BOUND_WARNING)}gridDimensionsMatchProps(){const{children:e,numRows:t}=this.props;return null!=this.grid&&this.grid.numCols===React.Children.count(e)&&this.grid.numRows===t}maybeRenderCopyHotkey(){const{getCellClipboardData:e}=this.props;return null!=e?React.createElement(Hotkey,{key:"copy-hotkey",label:"Copy selected table cells",group:"Table",combo:"mod+c",onKeyDown:this.hotkeysImpl.handleCopy}):void 0}maybeRenderSelectionResizeHotkeys(){const{enableMultipleSelection:e,selectionModes:t}=this.props,o=t.length>0;return e&&o?[React.createElement(Hotkey,{key:"resize-selection-up",label:"Resize selection upward",group:"Table",combo:"shift+up",onKeyDown:this.hotkeysImpl.handleSelectionResizeUp}),React.createElement(Hotkey,{key:"resize-selection-down",label:"Resize selection downward",group:"Table",combo:"shift+down",onKeyDown:this.hotkeysImpl.handleSelectionResizeDown}),React.createElement(Hotkey,{key:"resize-selection-left",label:"Resize selection leftward",group:"Table",combo:"shift+left",onKeyDown:this.hotkeysImpl.handleSelectionResizeLeft}),React.createElement(Hotkey,{key:"resize-selection-right",label:"Resize selection rightward",group:"Table",combo:"shift+right",onKeyDown:this.hotkeysImpl.handleSelectionResizeRight})]:void 0}maybeRenderFocusHotkeys(){const{enableFocusedCell:e}=this.props;return null!=e?[React.createElement(Hotkey,{key:"move left",label:"Move focus cell left",group:"Table",combo:"left",onKeyDown:this.hotkeysImpl.handleFocusMoveLeft}),React.createElement(Hotkey,{key:"move right",label:"Move focus cell right",group:"Table",combo:"right",onKeyDown:this.hotkeysImpl.handleFocusMoveRight}),React.createElement(Hotkey,{key:"move up",label:"Move focus cell up",group:"Table",combo:"up",onKeyDown:this.hotkeysImpl.handleFocusMoveUp}),React.createElement(Hotkey,{key:"move down",label:"Move focus cell down",group:"Table",combo:"down",onKeyDown:this.hotkeysImpl.handleFocusMoveDown}),React.createElement(Hotkey,{key:"move tab",label:"Move focus cell tab",group:"Table",combo:"tab",onKeyDown:this.hotkeysImpl.handleFocusMoveRightInternal,allowInInput:!0}),React.createElement(Hotkey,{key:"move shift-tab",label:"Move focus cell shift tab",group:"Table",combo:"shift+tab",onKeyDown:this.hotkeysImpl.handleFocusMoveLeftInternal,allowInInput:!0}),React.createElement(Hotkey,{key:"move enter",label:"Move focus cell enter",group:"Table",combo:"enter",onKeyDown:this.hotkeysImpl.handleFocusMoveDownInternal,allowInInput:!0}),React.createElement(Hotkey,{key:"move shift-enter",label:"Move focus cell shift enter",group:"Table",combo:"shift+enter",onKeyDown:this.hotkeysImpl.handleFocusMoveUpInternal,allowInInput:!0})]:[]}maybeRenderSelectAllHotkey(){return Table_1.isSelectionModeEnabled(this.props,RegionCardinality.FULL_TABLE)?React.createElement(Hotkey,{key:"select-all-hotkey",label:"Select all",group:"Table",combo:"mod+a",onKeyDown:this.hotkeysImpl.handleSelectAllHotkey}):void 0}shouldDisableVerticalScroll(){const{enableGhostCells:e}=this.props,{viewportRect:t}=this.state,o=this.grid.getRowIndicesInRect(t,e),n=null!=t&&0===t.top,l=hasLoadingOption(this.props.loadingOptions,TableLoadingOption.ROW_HEADERS);return e&&this.grid.isGhostIndex(o.rowIndexEnd-1,0)&&(n||l)}shouldDisableHorizontalScroll(){const{enableGhostCells:e}=this.props,{viewportRect:t}=this.state,o=this.grid.getColumnIndicesInRect(t,e),n=null!=t&&0===t.left,l=e&&this.grid.isGhostColumn(o.columnIndexEnd),s=hasLoadingOption(this.props.loadingOptions,TableLoadingOption.COLUMN_HEADERS);return l&&(n||s)}getColumnProps(e){const t=this.state.childrenArray[e];return void 0===t?void 0:t.props}isGuidesShowing(){return null!=this.state.verticalGuides||null!=this.state.horizontalGuides}invalidateGrid(){this.grid=null}validateGrid(){if(null==this.grid){const{defaultRowHeight:e,defaultColumnWidth:t}=this.props,{rowHeights:o,columnWidths:n}=this.state;this.grid=new Grid(o,n,Grid.DEFAULT_BLEED,e,t),this.invokeOnVisibleCellsChangeCallback(this.state.viewportRect),this.hotkeysImpl.setGrid(this.grid)}}maybeRenderRegions(e,t){if(!this.isGuidesShowing()||this.state.isReordering)return Regions.joinStyledRegionGroups(this.state.selectedRegions,this.props.styledRegionGroups,this.state.focusedCell).map(((o,n)=>{const l=o.regions.map((o=>e(o,t)));return React.createElement(RegionLayer,{className:classNames(o.className),key:n,regions:o.regions,regionStyles:l})}))}updateLocator(){this.locator.setGrid(this.grid).setNumFrozenRows(this.state.numFrozenRowsClamped).setNumFrozenColumns(this.state.numFrozenColumnsClamped)}invokeOnVisibleCellsChangeCallback(e){const t=this.grid.getColumnIndicesInRect(e),o=this.grid.getRowIndicesInRect(e);this.props.onVisibleCellsChange?.(o,t)}getNormalizedRenderMode(){const{renderMode:e}=this.props;return e===RenderMode.BATCH||e===RenderMode.BATCH_ON_UPDATE&&this.didCompletelyMount?RenderMode.BATCH:RenderMode.NONE}};Table.displayName=`${DISPLAYNAME_PREFIX}.Table`,Table.defaultProps={defaultColumnWidth:150,defaultRowHeight:20,enableFocusedCell:!1,enableGhostCells:!1,enableMultipleSelection:!0,enableRowHeader:!0,forceRerenderOnSelectionChange:!1,loadingOptions:[],minColumnWidth:50,minRowHeight:20,numFrozenColumns:0,numFrozenRows:0,numRows:0,renderMode:RenderMode.BATCH_ON_UPDATE,rowHeaderCellRenderer:renderDefaultRowHeader,selectionModes:SelectionModes.ALL},Table.childContextTypes=columnInteractionBarContextTypes,Table.SHALLOW_COMPARE_PROP_KEYS_DENYLIST=["selectedRegions"],Table.SHALLOW_COMPARE_STATE_KEYS_DENYLIST=["selectedRegions","viewportRect"],Table=Table_1=__decorate([HotkeysTarget,polyfill],Table);export{Table};