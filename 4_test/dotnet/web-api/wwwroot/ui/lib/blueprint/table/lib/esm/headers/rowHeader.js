import{__assign,__extends,__rest}from"tslib";import classNames from"classnames";import*as React from"react";import*as Classes from"../common/classes";import{Orientation}from"../interactions/resizeHandle";import{RegionCardinality,Regions}from"../regions";import{Header}from"./header";import{RowHeaderCell}from"./rowHeaderCell";var RowHeader=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.wrapCells=function(e){var r=t.props,n=r.rowIndexStart,o=r.grid.getRect().height,i=t.props.grid.getCumulativeHeightBefore(n),s={height:o-i,transform:"translateY("+(i||0)+"px)"};return React.createElement("div",{style:{height:o}},React.createElement("div",{className:Classes.TABLE_ROW_HEADERS_CELLS_CONTAINER,style:s},e))},t.convertPointToRow=function(e,r){var n=t.props.locator;return null!=n?n.convertPointToRow(e,r):null},t.getCellExtremaClasses=function(e,r){return t.props.grid.getExtremaClasses(e,0,r,1)},t.getRowHeight=function(e){return t.props.grid.getRowRect(e).height},t.getDragCoordinate=function(e){return e[1]},t.getMouseCoordinate=function(e){return e.clientY},t.handleResizeEnd=function(e,r){t.props.onResizeGuide(null),t.props.onRowHeightChanged(e,r)},t.handleSizeChanged=function(e,r){var n=t.props.grid.getRowRect(e);t.props.onResizeGuide([n.top+r])},t.isCellSelected=function(e){return Regions.hasFullRow(t.props.selectedRegions,e)},t.isGhostIndex=function(e){return t.props.grid.isGhostIndex(e,-1)},t.renderGhostCell=function(e,r){var n=t.props.grid.getGhostCellRect(e,0);return React.createElement(RowHeaderCell,{className:classNames(r),index:e,key:Classes.rowIndexClass(e),loading:t.props.loading,style:{height:n.height+"px"}})},t.toRegion=function(e,t){return Regions.row(e,t)},t}return __extends(t,e),t.prototype.render=function(){var e=this.props,t=(e.onRowHeightChanged,e.rowHeaderCellRenderer),r=e.minRowHeight,n=e.maxRowHeight,o=(e.defaultRowHeight,e.rowIndexStart),i=e.rowIndexEnd,s=__rest(e,["onRowHeightChanged","rowHeaderCellRenderer","minRowHeight","maxRowHeight","defaultRowHeight","rowIndexStart","rowIndexEnd"]);return React.createElement(Header,__assign({convertPointToIndex:this.convertPointToRow,fullRegionCardinality:RegionCardinality.FULL_ROWS,getCellExtremaClasses:this.getCellExtremaClasses,getCellIndexClass:Classes.rowCellIndexClass,getCellSize:this.getRowHeight,getDragCoordinate:this.getDragCoordinate,getIndexClass:Classes.rowIndexClass,getMouseCoordinate:this.getMouseCoordinate,ghostCellRenderer:this.renderGhostCell,handleResizeEnd:this.handleResizeEnd,handleSizeChanged:this.handleSizeChanged,headerCellIsReorderablePropName:"enableRowReordering",headerCellIsSelectedPropName:"isRowSelected",headerCellRenderer:t,indexEnd:i,indexStart:o,isCellSelected:this.isCellSelected,isGhostIndex:this.isGhostIndex,maxSize:n,minSize:r,resizeOrientation:Orientation.HORIZONTAL,selectedRegions:[],toRegion:this.toRegion,wrapCells:this.wrapCells},s))},t.defaultProps={rowHeaderCellRenderer:renderDefaultRowHeader},t}(React.Component);export{RowHeader};export function renderDefaultRowHeader(e){return React.createElement(RowHeaderCell,{index:e,name:""+(e+1)})}