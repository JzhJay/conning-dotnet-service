var DateRangePicker_1;import{__decorate}from"tslib";import classNames from"classnames";import*as React from"react";import DayPicker from"react-day-picker";import{polyfill}from"react-lifecycles-compat";import{AbstractPureComponent2,Boundary,DISPLAYNAME_PREFIX,Divider}from"@blueprintjs/core";import*as DateClasses from"./common/classes";import*as DateUtils from"./common/dateUtils";import*as Errors from"./common/errors";import{MonthAndYear}from"./common/monthAndYear";import{DatePickerCaption}from"./datePickerCaption";import{combineModifiers,getDefaultMaxDate,getDefaultMinDate,HOVERED_RANGE_MODIFIER,SELECTED_RANGE_MODIFIER}from"./datePickerCore";import{DatePickerNavbar}from"./datePickerNavbar";import{DateRangeSelectionStrategy}from"./dateRangeSelectionStrategy";import{Shortcuts}from"./shortcuts";import{TimePicker}from"./timePicker";let DateRangePicker=DateRangePicker_1=class extends AbstractPureComponent2{constructor(e,t){super(e,t),this.modifiers={[SELECTED_RANGE_MODIFIER]:e=>{const{value:t}=this.state;return null!=t[0]&&null!=t[1]&&DateUtils.isDayInRange(e,t,!0)},[`${SELECTED_RANGE_MODIFIER}-start`]:e=>DateUtils.areSameDay(this.state.value[0],e),[`${SELECTED_RANGE_MODIFIER}-end`]:e=>DateUtils.areSameDay(this.state.value[1],e),[HOVERED_RANGE_MODIFIER]:e=>{const{hoverValue:t,value:[a,n]}=this.state;return(null!=a||null!=n)&&null!=t&&null!=t[0]&&null!=t[1]&&DateUtils.isDayInRange(e,t,!0)},[`${HOVERED_RANGE_MODIFIER}-start`]:e=>{const{hoverValue:t}=this.state;return null!=t&&null!=t[0]&&DateUtils.areSameDay(t[0],e)},[`${HOVERED_RANGE_MODIFIER}-end`]:e=>{const{hoverValue:t}=this.state;return null!=t&&null!=t[1]&&DateUtils.areSameDay(t[1],e)}},this.shouldHighlightCurrentDay=e=>{const{highlightCurrentDay:t}=this.props;return t&&DateUtils.isToday(e)},this.getDateRangePickerModifiers=()=>{const{modifiers:e}=this.props;return combineModifiers(this.modifiers,{isToday:this.shouldHighlightCurrentDay,...e})},this.renderDay=e=>{const t=e.getDate();return React.createElement("div",{className:DateClasses.DATEPICKER_DAY_WRAPPER},t)},this.disabledDays=e=>!DateUtils.isDayInRange(e,[this.props.minDate,this.props.maxDate]),this.getDisabledDaysModifier=()=>{const{dayPickerProps:{disabledDays:e}}=this.props;return e instanceof Array?[this.disabledDays,...e]:[this.disabledDays,e]},this.handleTimeChange=(e,t)=>{this.props.timePickerProps?.onChange?.(e);const{value:a,time:n}=this.state,s=DateUtils.getDateTime(null!=a[t]?DateUtils.clone(a[t]):new Date,e),i=[a[0],a[1]];i[t]=s;const r=[n[0],n[1]];r[t]=e,this.props.onChange?.(i),this.setState({value:i,time:r})},this.handleTimeChangeLeftCalendar=e=>{this.handleTimeChange(e,0)},this.handleTimeChangeRightCalendar=e=>{this.handleTimeChange(e,1)},this.renderSingleNavbar=e=>React.createElement(DatePickerNavbar,Object.assign({},e,{maxDate:this.props.maxDate,minDate:this.props.minDate})),this.renderLeftNavbar=e=>React.createElement(DatePickerNavbar,Object.assign({},e,{hideRightNavButton:this.props.contiguousCalendarMonths,maxDate:this.props.maxDate,minDate:this.props.minDate})),this.renderRightNavbar=e=>React.createElement(DatePickerNavbar,Object.assign({},e,{hideLeftNavButton:this.props.contiguousCalendarMonths,maxDate:this.props.maxDate,minDate:this.props.minDate})),this.renderSingleCaption=e=>React.createElement(DatePickerCaption,Object.assign({},e,{maxDate:this.props.maxDate,minDate:this.props.minDate,onMonthChange:this.handleLeftMonthSelectChange,onYearChange:this.handleLeftYearSelectChange,reverseMonthAndYearMenus:this.props.reverseMonthAndYearMenus})),this.renderLeftCaption=e=>React.createElement(DatePickerCaption,Object.assign({},e,{maxDate:DateUtils.getDatePreviousMonth(this.props.maxDate),minDate:this.props.minDate,onMonthChange:this.handleLeftMonthSelectChange,onYearChange:this.handleLeftYearSelectChange,reverseMonthAndYearMenus:this.props.reverseMonthAndYearMenus})),this.renderRightCaption=e=>React.createElement(DatePickerCaption,Object.assign({},e,{maxDate:this.props.maxDate,minDate:DateUtils.getDateNextMonth(this.props.minDate),onMonthChange:this.handleRightMonthSelectChange,onYearChange:this.handleRightYearSelectChange,reverseMonthAndYearMenus:this.props.reverseMonthAndYearMenus})),this.handleDayMouseEnter=(e,t,a)=>{if(this.props.dayPickerProps.onDayMouseEnter?.(e,t,a),t.disabled)return;const{dateRange:n,boundary:s}=DateRangeSelectionStrategy.getNextState(this.state.value,e,this.props.allowSingleDayRange,this.props.boundaryToModify);this.setState({hoverValue:n}),this.props.onHoverChange?.(n,e,s)},this.handleDayMouseLeave=(e,t,a)=>{this.props.dayPickerProps.onDayMouseLeave?.(e,t,a),t.disabled||(this.setState({hoverValue:void 0}),this.props.onHoverChange?.(void 0,e,void 0))},this.handleDayClick=(e,t,a)=>{if(this.props.dayPickerProps.onDayClick?.(e,t,a),t.disabled)return void this.forceUpdate();const n=DateRangeSelectionStrategy.getNextState(this.state.value,e,this.props.allowSingleDayRange,this.props.boundaryToModify).dateRange;this.handleDayMouseEnter(e,t,a),this.handleNextState(n)},this.handleShortcutClick=(e,t)=>{const{onChange:a,contiguousCalendarMonths:n,onShortcutChange:s}=this.props,{dateRange:i,includeTime:r}=e;if(r){const e=[i[0],i[1]],t=[i[0],i[1]],s=getStateChange(this.state.value,i,this.state,n);this.setState({...s,time:t}),a?.(e)}else this.handleNextState(i);void 0===this.props.selectedShortcutIndex&&this.setState({selectedShortcutIndex:t}),s?.(e,t)},this.handleNextState=e=>{const{value:t}=this.state;e[0]=DateUtils.getDateTime(e[0],this.state.time[0]),e[1]=DateUtils.getDateTime(e[1],this.state.time[1]);const a=getStateChange(t,e,this.state,this.props.contiguousCalendarMonths);null==this.props.value&&this.setState(a),this.props.onChange?.(e)},this.handleLeftMonthChange=e=>{const t=MonthAndYear.fromDate(e);this.props.dayPickerProps.onMonthChange?.(t.getFullDate()),this.updateLeftView(t)},this.handleRightMonthChange=e=>{const t=MonthAndYear.fromDate(e);this.props.dayPickerProps.onMonthChange?.(t.getFullDate()),this.updateRightView(t)},this.handleLeftMonthSelectChange=e=>{const t=new MonthAndYear(e,this.state.leftView.getYear());this.props.dayPickerProps.onMonthChange?.(t.getFullDate()),this.updateLeftView(t)},this.handleRightMonthSelectChange=e=>{const t=new MonthAndYear(e,this.state.rightView.getYear());this.props.dayPickerProps.onMonthChange?.(t.getFullDate()),this.updateRightView(t)},this.handleLeftYearSelectChange=e=>{let t=new MonthAndYear(this.state.leftView.getMonth(),e);this.props.dayPickerProps.onMonthChange?.(t.getFullDate());const{minDate:a,maxDate:n}=this.props,s=DateUtils.getDatePreviousMonth(n),i=new MonthAndYear(a.getMonth(),a.getFullYear()),r=new MonthAndYear(s.getMonth(),s.getFullYear());t.isBefore(i)?t=i:t.isAfter(r)&&(t=r);let o=this.state.rightView.clone();t.isBefore(o)&&!this.props.contiguousCalendarMonths||(o=t.getNextMonth()),this.setViews(t,o)},this.handleRightYearSelectChange=e=>{let t=new MonthAndYear(this.state.rightView.getMonth(),e);this.props.dayPickerProps.onMonthChange?.(t.getFullDate());const{minDate:a,maxDate:n}=this.props,s=DateUtils.getDateNextMonth(a),i=MonthAndYear.fromDate(s),r=MonthAndYear.fromDate(n);t.isBefore(i)?t=i:t.isAfter(r)&&(t=r);let o=this.state.leftView.clone();t.isAfter(o)&&!this.props.contiguousCalendarMonths||(o=t.getPreviousMonth()),this.setViews(o,t)};const a=getInitialValue(e),n=a,s=getInitialMonth(e,a),i=DateUtils.areSameMonth(s,e.minDate),r=DateUtils.areSameMonth(s,e.maxDate);e.singleMonthOnly||i||!r||s.setMonth(s.getMonth()-1);const o=MonthAndYear.fromDate(s),h=a[1],l=e.contiguousCalendarMonths||null==h||DateUtils.areSameMonth(s,h)?o.getNextMonth():MonthAndYear.fromDate(h);this.state={hoverValue:[null,null],leftView:o,rightView:l,selectedShortcutIndex:void 0!==this.props.selectedShortcutIndex?this.props.selectedShortcutIndex:-1,time:n,value:a}}render(){const{className:e,contiguousCalendarMonths:t,singleMonthOnly:a}=this.props,n=a||DateUtils.areSameMonth(this.props.minDate,this.props.maxDate),s=classNames(DateClasses.DATEPICKER,DateClasses.DATERANGEPICKER,e,{[DateClasses.DATERANGEPICKER_CONTIGUOUS]:t,[DateClasses.DATERANGEPICKER_SINGLE_MONTH]:n});return React.createElement("div",{className:s},this.maybeRenderShortcuts(),React.createElement("div",null,this.renderCalendars(n),this.maybeRenderTimePickers()))}componentDidUpdate(e,t){if(super.componentDidUpdate(e,t),!DateUtils.areRangesEqual(e.value,this.props.value)||e.contiguousCalendarMonths!==this.props.contiguousCalendarMonths){const t=getStateChange(e.value,this.props.value,this.state,e.contiguousCalendarMonths);this.setState(t)}this.props.selectedShortcutIndex!==e.selectedShortcutIndex&&this.setState({selectedShortcutIndex:this.props.selectedShortcutIndex})}validateProps(e){const{defaultValue:t,initialMonth:a,maxDate:n,minDate:s,boundaryToModify:i,value:r}=e,o=[s,n];null==t||DateUtils.isDayRangeInRange(t,o)||console.error(Errors.DATERANGEPICKER_DEFAULT_VALUE_INVALID),null==a||DateUtils.isMonthInRange(a,o)||console.error(Errors.DATERANGEPICKER_INITIAL_MONTH_INVALID),null!=n&&null!=s&&n<s&&!DateUtils.areSameDay(n,s)&&console.error(Errors.DATERANGEPICKER_MAX_DATE_INVALID),null==r||DateUtils.isDayRangeInRange(r,o)||console.error(Errors.DATERANGEPICKER_VALUE_INVALID),null!=i&&i!==Boundary.START&&i!==Boundary.END&&console.error(Errors.DATERANGEPICKER_PREFERRED_BOUNDARY_TO_MODIFY_INVALID)}maybeRenderShortcuts(){const{shortcuts:e}=this.props;if(null==e||!1===e)return null;const{selectedShortcutIndex:t}=this.state,{allowSingleDayRange:a,maxDate:n,minDate:s,timePrecision:i}=this.props;return[React.createElement(Shortcuts,Object.assign({key:"shortcuts"},{allowSingleDayRange:a,maxDate:n,minDate:s,selectedShortcutIndex:t,shortcuts:e,timePrecision:i},{onShortcutClick:this.handleShortcutClick})),React.createElement(Divider,{key:"div"})]}maybeRenderTimePickers(){const{timePrecision:e,timePickerProps:t}=this.props;return null==e&&t===DateRangePicker_1.defaultProps.timePickerProps?null:React.createElement("div",{className:DateClasses.DATERANGEPICKER_TIMEPICKERS},React.createElement(TimePicker,Object.assign({precision:e},t,{onChange:this.handleTimeChangeLeftCalendar,value:this.state.time[0]})),React.createElement(TimePicker,Object.assign({precision:e},t,{onChange:this.handleTimeChangeRightCalendar,value:this.state.time[1]})))}renderCalendars(e){const{dayPickerProps:t,locale:a,localeUtils:n,maxDate:s,minDate:i}=this.props,r={locale:a,localeUtils:n,modifiers:this.getDateRangePickerModifiers(),showOutsideDays:!0,...t,disabledDays:this.getDisabledDaysModifier(),onDayClick:this.handleDayClick,onDayMouseEnter:this.handleDayMouseEnter,onDayMouseLeave:this.handleDayMouseLeave,selectedDays:this.state.value};return e?React.createElement(DayPicker,Object.assign({},r,{captionElement:this.renderSingleCaption,navbarElement:this.renderSingleNavbar,fromMonth:i,month:this.state.leftView.getFullDate(),numberOfMonths:1,onMonthChange:this.handleLeftMonthChange,toMonth:s,renderDay:t?.renderDay??this.renderDay})):[React.createElement(DayPicker,Object.assign({key:"left"},r,{canChangeMonth:!0,captionElement:this.renderLeftCaption,navbarElement:this.renderLeftNavbar,fromMonth:i,month:this.state.leftView.getFullDate(),numberOfMonths:1,onMonthChange:this.handleLeftMonthChange,toMonth:DateUtils.getDatePreviousMonth(s),renderDay:t?.renderDay??this.renderDay})),React.createElement(DayPicker,Object.assign({key:"right"},r,{canChangeMonth:!0,captionElement:this.renderRightCaption,navbarElement:this.renderRightNavbar,fromMonth:DateUtils.getDateNextMonth(i),month:this.state.rightView.getFullDate(),numberOfMonths:1,onMonthChange:this.handleRightMonthChange,toMonth:s,renderDay:t?.renderDay??this.renderDay}))]}updateLeftView(e){let t=this.state.rightView.clone();e.isBefore(t)&&!this.props.contiguousCalendarMonths||(t=e.getNextMonth()),this.setViews(e,t)}updateRightView(e){let t=this.state.leftView.clone();e.isAfter(t)&&!this.props.contiguousCalendarMonths||(t=e.getPreviousMonth()),this.setViews(t,e)}setViews(e,t){this.setState({leftView:e,rightView:t})}};DateRangePicker.defaultProps={allowSingleDayRange:!1,contiguousCalendarMonths:!0,dayPickerProps:{},maxDate:getDefaultMaxDate(),minDate:getDefaultMinDate(),reverseMonthAndYearMenus:!1,shortcuts:!0,singleMonthOnly:!1,timePickerProps:{}},DateRangePicker.displayName=`${DISPLAYNAME_PREFIX}.DateRangePicker`,DateRangePicker=DateRangePicker_1=__decorate([polyfill],DateRangePicker);export{DateRangePicker};function getStateChange(e,t,a,n){if(null!=e&&null==t)return{value:[null,null]};if(null!=t){let e=a.leftView.clone(),s=a.rightView.clone();const i=MonthAndYear.fromDate(t[0]),r=MonthAndYear.fromDate(t[1]);return null==i&&null!=r?r.isSame(e)||r.isSame(s)||(s=r,e.isBefore(s)||(e=s.getPreviousMonth())):null!=i&&null==r?i.isSame(e)||i.isSame(s)||(e=i,s.isAfter(e)||(s=e.getNextMonth())):null!=i&&null!=r&&(i.isSame(r)?e.isSame(i)||s.isSame(i)||(e=i,s=i.getNextMonth()):(e.isSame(i)||(e=i,s=i.getNextMonth()),!1!==n||s.isSame(r)||(s=r))),{leftView:e,rightView:s,value:t}}return!0!==n||a.leftView.getNextMonth().isSameMonth(a.rightView)?{}:{rightView:a.leftView.getNextMonth()}}function getInitialValue(e){return null!=e.value?e.value:null!=e.defaultValue?e.defaultValue:[null,null]}function getInitialMonth(e,t){const a=new Date;if(null!=e.initialMonth)return e.initialMonth;if(null!=t[0])return DateUtils.clone(t[0]);if(null!=t[1]){const a=DateUtils.clone(t[1]);return DateUtils.areSameMonth(a,e.minDate)||a.setMonth(a.getMonth()-1),a}return DateUtils.isDayInRange(a,[e.minDate,e.maxDate])?a:DateUtils.getDateBetween([e.minDate,e.maxDate])}