import*as React from"react";import*as ReactDOM from"react-dom";import{CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT,CONTEXTMENU_WARN_DECORATOR_NO_METHOD}from"../../common/errors";import{getDisplayName,isFunction}from"../../common/utils";import{isDarkTheme}from"../../common/utils/isDarkTheme";import*as ContextMenu from"./contextMenu";export function ContextMenuTarget(e){var t;return isFunction(e.prototype.renderContextMenu)||console.warn(CONTEXTMENU_WARN_DECORATOR_NO_METHOD),(t=class extends e{render(){const e=super.render();if(null==e)return e;if(!React.isValidElement(e))return console.warn(CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT),e;const t=e.props.onContextMenu;return React.cloneElement(e,{onContextMenu:e=>{if(!e.defaultPrevented){if(isFunction(this.renderContextMenu)){const t=this.renderContextMenu(e);if(null!=t){const n=isDarkTheme(ReactDOM.findDOMNode(this));e.preventDefault(),ContextMenu.show(t,{left:e.clientX,top:e.clientY},this.onContextMenuClose,n)}}t?.(e)}}})}}).displayName=`ContextMenuTarget(${getDisplayName(e)})`,t}