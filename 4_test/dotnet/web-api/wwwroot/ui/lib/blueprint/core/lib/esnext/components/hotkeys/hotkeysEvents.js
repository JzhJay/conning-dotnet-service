import{Children}from"react";import{isElementOfType}from"../../common/utils";import{Hotkey}from"./hotkey";import{comboMatches,getKeyCombo,parseKeyCombo}from"./hotkeyParser";import{hideHotkeysDialogAfterDelay,isHotkeysDialogShowing,showHotkeysDialog}from"./hotkeysDialog";const SHOW_DIALOG_KEY="?";export var HotkeyScope;!function(o){o.LOCAL="local",o.GLOBAL="global"}(HotkeyScope||(HotkeyScope={}));export class HotkeysEvents{constructor(o){this.scope=o,this.actions=[],this.handleKeyDown=o=>{const e=getKeyCombo(o);this.isTextInput(o)||!comboMatches(parseKeyCombo("?"),e)?isHotkeysDialogShowing()||this.invokeNamedCallbackIfComboRecognized(e,"onKeyDown",o):isHotkeysDialogShowing()?hideHotkeysDialogAfterDelay():showHotkeysDialog(this.actions.map((o=>o.props)))},this.handleKeyUp=o=>{isHotkeysDialogShowing()||this.invokeNamedCallbackIfComboRecognized(getKeyCombo(o),"onKeyUp",o)}}count(){return this.actions.length}clear(){this.actions=[]}setHotkeys(o){const e=[];Children.forEach(o.children,(o=>{isElementOfType(o,Hotkey)&&this.isScope(o.props)&&e.push({combo:parseKeyCombo(o.props.combo),props:o.props})})),this.actions=e}invokeNamedCallbackIfComboRecognized(o,e,t){const s=this.isTextInput(t);for(const i of this.actions)!(s&&!i.props.allowInInput||i.props.disabled)&&comboMatches(i.combo,o)&&(i.props.preventDefault&&t.preventDefault(),i.props.stopPropagation&&(t.isPropagationStopped=!0,t.stopPropagation()),i.props[e]?.(t))}isScope(o){return(o.global?HotkeyScope.GLOBAL:HotkeyScope.LOCAL)===this.scope}isTextInput(o){const e=o.target;if(null==e||null==e.closest)return!1;const t=e.closest("input, textarea, [contenteditable=true]");if(null==t)return!1;if("input"===t.tagName.toLowerCase()){const o=t.type;if("checkbox"===o||"radio"===o)return!1}return!t.readOnly}}