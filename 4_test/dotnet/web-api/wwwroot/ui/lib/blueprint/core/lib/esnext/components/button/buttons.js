import*as React from"react";import{DISPLAYNAME_PREFIX,removeNonHTMLProps}from"../../common/props";import{refHandler,setRef}from"../../common/refs";import{AbstractButton}from"./abstractButton";export class Button extends AbstractButton{constructor(){super(...arguments),this.buttonRef=null,this.handleRef=refHandler(this,"buttonRef",this.props.elementRef)}render(){return React.createElement("button",Object.assign({type:"button",ref:this.handleRef},removeNonHTMLProps(this.props),this.getCommonButtonProps()),this.renderChildren())}componentDidUpdate(e){e.elementRef!==this.props.elementRef&&(setRef(e.elementRef,null),this.handleRef=refHandler(this,"buttonRef",this.props.elementRef),setRef(this.props.elementRef,this.buttonRef))}}Button.displayName=`${DISPLAYNAME_PREFIX}.Button`;export class AnchorButton extends AbstractButton{constructor(){super(...arguments),this.buttonRef=null,this.handleRef=refHandler(this,"buttonRef",this.props.elementRef)}render(){const{href:e,tabIndex:t=0}=this.props,n=this.getCommonButtonProps();return React.createElement("a",Object.assign({role:"button",ref:this.handleRef},removeNonHTMLProps(this.props),n,{href:n.disabled?void 0:e,tabIndex:n.disabled?-1:t}),this.renderChildren())}componentDidUpdate(e){e.elementRef!==this.props.elementRef&&(setRef(e.elementRef,null),this.handleRef=refHandler(this,"buttonRef",this.props.elementRef),setRef(this.props.elementRef,this.buttonRef))}}AnchorButton.displayName=`${DISPLAYNAME_PREFIX}.AnchorButton`;