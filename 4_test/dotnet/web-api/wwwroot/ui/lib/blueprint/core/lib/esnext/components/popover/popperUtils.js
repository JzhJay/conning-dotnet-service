export function getPosition(t){return t.split("-")[0]}export function isVerticalPosition(t){return-1!==["left","right"].indexOf(t)}export function getOppositePosition(t){switch(t){case"top":return"bottom";case"left":return"right";case"bottom":return"top";default:return"left"}}export function getAlignment(t){switch(t.split("-")[1]){case"start":return"left";case"end":return"right";default:return"center"}}export function getTransformOrigin(t){const e=getPosition(t.placement);if(null==t.arrowElement)return isVerticalPosition(e)?`${getOppositePosition(e)} ${getAlignment(e)}`:`${getAlignment(e)} ${getOppositePosition(e)}`;{const o=t.arrowElement.clientHeight/2,{arrow:r}=t.offsets;return isVerticalPosition(e)?`${getOppositePosition(e)} ${r.top+o}px`:`${r.left+o}px ${getOppositePosition(e)}`}}const ARROW_SPACING=4;export const arrowOffsetModifier=t=>{if(null==t.arrowElement)return t;const e=t.arrowElement.clientWidth,o=getPosition(t.placement),r=isVerticalPosition(o),i=r?"width":"height",n=r?"left":"top",s=Math.round(e/2/Math.sqrt(2));return"top"===o||"left"===o?(t.offsets.popper[n]-=s+4,t.offsets.arrow[n]=t.offsets.popper[i]-e+s):(t.offsets.popper[n]+=s+4,t.offsets.arrow[n]=-s),t};