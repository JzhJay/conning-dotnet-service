import{__decorate}from"tslib";import classNames from"classnames";import*as React from"react";import{polyfill}from"react-lifecycles-compat";import{AbstractPureComponent2,Classes}from"../../common";import{DISPLAYNAME_PREFIX}from"../../common/props";export var AnimationStates;!function(t){t[t.OPEN_START=0]="OPEN_START",t[t.OPENING=1]="OPENING",t[t.OPEN=2]="OPEN",t[t.CLOSING_START=3]="CLOSING_START",t[t.CLOSING=4]="CLOSING",t[t.CLOSED=5]="CLOSED"}(AnimationStates||(AnimationStates={}));let Collapse=class extends AbstractPureComponent2{constructor(){super(...arguments),this.state={animationState:this.props.isOpen?AnimationStates.OPEN:AnimationStates.CLOSED,height:void 0,heightWhenOpen:void 0},this.contents=null,this.contentsRefHandler=t=>{if(this.contents=t,null!=this.contents){const t=this.contents.clientHeight;this.setState({animationState:this.props.isOpen?AnimationStates.OPEN:AnimationStates.CLOSED,height:0===t?void 0:`${t}px`,heightWhenOpen:0===t?void 0:t})}}}static getDerivedStateFromProps(t,e){const{isOpen:i}=t,{animationState:a}=e;if(i)switch(a){case AnimationStates.OPEN:case AnimationStates.OPENING:break;default:return{animationState:AnimationStates.OPEN_START}}else switch(a){case AnimationStates.CLOSED:case AnimationStates.CLOSING:break;default:return{animationState:AnimationStates.CLOSING_START,height:`${e.heightWhenOpen}px`}}return null}render(){const t=this.state.animationState!==AnimationStates.CLOSED,e=t||this.props.keepChildrenMounted,i=t&&this.state.animationState!==AnimationStates.CLOSING,a="auto"===this.state.height,n={height:t?this.state.height:void 0,overflowY:a?"visible":void 0,transition:a?"none":void 0},s={transform:i?"translateY(0)":`translateY(-${this.state.heightWhenOpen}px)`,transition:a?"none":void 0};return React.createElement(this.props.component,{className:classNames(Classes.COLLAPSE,this.props.className),style:n},React.createElement("div",{className:Classes.COLLAPSE_BODY,ref:this.contentsRefHandler,style:s,"aria-hidden":!t&&this.props.keepChildrenMounted},e?this.props.children:null))}componentDidMount(){this.forceUpdate(),this.props.isOpen?this.setState({animationState:AnimationStates.OPEN,height:"auto"}):this.setState({animationState:AnimationStates.CLOSED,height:"0px"})}componentDidUpdate(){if(null==this.contents)return;const{transitionDuration:t}=this.props,{animationState:e}=this.state;if(e===AnimationStates.OPEN_START){const{clientHeight:e}=this.contents;this.setState({animationState:AnimationStates.OPENING,height:`${e}px`,heightWhenOpen:e}),this.setTimeout((()=>this.onDelayedStateChange()),t)}else if(e===AnimationStates.CLOSING_START){const{clientHeight:e}=this.contents;this.setTimeout((()=>this.setState({animationState:AnimationStates.CLOSING,height:"0px",heightWhenOpen:e}))),this.setTimeout((()=>this.onDelayedStateChange()),t)}}onDelayedStateChange(){switch(this.state.animationState){case AnimationStates.OPENING:this.setState({animationState:AnimationStates.OPEN,height:"auto"});break;case AnimationStates.CLOSING:this.setState({animationState:AnimationStates.CLOSED})}}};Collapse.displayName=`${DISPLAYNAME_PREFIX}.Collapse`,Collapse.defaultProps={component:"div",isOpen:!1,keepChildrenMounted:!1,transitionDuration:200},Collapse=__decorate([polyfill],Collapse);export{Collapse};