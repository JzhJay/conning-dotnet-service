import*as React from"react";import{comboMatches,getKeyCombo,parseKeyCombo}from"../../components/hotkeys/hotkeyParser";import{HotkeysContext}from"../../context";export function useHotkeys(e,t={}){const{document:o=getDefaultDocument(),showDialogKeyCombo:n="?"}=t,a=React.useMemo((()=>e.filter((e=>!e.global)).map((e=>({combo:parseKeyCombo(e.combo),config:e})))),[e]),c=React.useMemo((()=>e.filter((e=>e.global)).map((e=>({combo:parseKeyCombo(e.combo),config:e})))),[e]),[,r]=React.useContext(HotkeysContext);React.useEffect((()=>{const e=[...c.map((e=>e.config)),...a.map((e=>e.config))];return r({type:"ADD_HOTKEYS",payload:e}),()=>r({type:"REMOVE_HOTKEYS",payload:e})}),[e]);const s=(e,t,o,n)=>{const r=isTargetATextInput(n);for(const s of e?c:a){const{allowInInput:e=!1,disabled:a=!1,preventDefault:c=!1,stopPropagation:i=!1}=s.config;!(r&&!e||a)&&comboMatches(s.combo,t)&&(c&&n.preventDefault(),i&&(n.isPropagationStopped=!0,n.stopPropagation()),s.config[o]?.(n))}},i=React.useCallback((e=>{const t=getKeyCombo(e);!isTargetATextInput(e)&&comboMatches(parseKeyCombo(n),t)?r({type:"OPEN_DIALOG"}):s(!0,getKeyCombo(e),"onKeyDown",e)}),[c]),u=React.useCallback((e=>s(!0,getKeyCombo(e),"onKeyUp",e)),[c]),p=React.useCallback((e=>s(!1,getKeyCombo(e.nativeEvent),"onKeyDown",e.nativeEvent)),[a]),m=React.useCallback((e=>s(!1,getKeyCombo(e.nativeEvent),"onKeyUp",e.nativeEvent)),[a]);return React.useEffect((()=>(o.addEventListener("keydown",i),o.addEventListener("keyup",u),()=>{o.removeEventListener("keydown",i),o.removeEventListener("keyup",u)})),[i,u]),{handleKeyDown:p,handleKeyUp:m}}function isTargetATextInput(e){const t=e.target;if(null==t||null==t.closest)return!1;const o=t.closest("input, textarea, [contenteditable=true]");if(null==o)return!1;if("input"===o.tagName.toLowerCase()){const e=o.type;if("checkbox"===e||"radio"===e)return!1}return!o.readOnly}function getDefaultDocument(){if("undefined"!=typeof window)return window.document}