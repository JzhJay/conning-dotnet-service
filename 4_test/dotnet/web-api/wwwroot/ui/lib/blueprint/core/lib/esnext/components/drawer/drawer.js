import{__decorate}from"tslib";import classNames from"classnames";import*as React from"react";import{polyfill}from"react-lifecycles-compat";import{AbstractPureComponent2,Classes}from"../../common";import*as Errors from"../../common/errors";import{getPositionIgnoreAngles,isPositionHorizontal}from"../../common/position";import{DISPLAYNAME_PREFIX}from"../../common/props";import{Button}from"../button/buttons";import{H4}from"../html/html";import{Icon,IconSize}from"../icon/icon";import{Overlay}from"../overlay/overlay";export var DrawerSize;!function(e){e.SMALL="360px",e.STANDARD="50%",e.LARGE="90%"}(DrawerSize||(DrawerSize={}));let Drawer=class extends AbstractPureComponent2{render(){const{size:e,style:o,position:r,vertical:s}=this.props,t=r?getPositionIgnoreAngles(r):void 0,a=classNames(Classes.DRAWER,{[Classes.VERTICAL]:!t&&s,[Classes.positionClass(t)??""]:!0},this.props.className),n=null==e?o:{...o,[(t?isPositionHorizontal(t):s)?"height":"width"]:e};return React.createElement(Overlay,Object.assign({},this.props,{className:Classes.OVERLAY_CONTAINER}),React.createElement("div",{className:a,style:n},this.maybeRenderHeader(),this.props.children))}validateProps(e){null==e.title&&(null!=e.icon&&console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON),null!=e.isCloseButtonShown&&console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON)),null!=e.position&&(e.vertical&&console.warn(Errors.DRAWER_VERTICAL_IS_IGNORED),e.position!==getPositionIgnoreAngles(e.position)&&console.warn(Errors.DRAWER_ANGLE_POSITIONS_ARE_CASTED))}maybeRenderCloseButton(){return!1!==this.props.isCloseButtonShown?React.createElement(Button,{"aria-label":"Close",className:Classes.DIALOG_CLOSE_BUTTON,icon:React.createElement(Icon,{icon:"small-cross",size:IconSize.LARGE}),minimal:!0,onClick:this.props.onClose}):null}maybeRenderHeader(){const{icon:e,title:o}=this.props;return null==o?null:React.createElement("div",{className:Classes.DRAWER_HEADER},React.createElement(Icon,{icon:e,size:IconSize.LARGE}),React.createElement(H4,null,o),this.maybeRenderCloseButton())}};Drawer.displayName=`${DISPLAYNAME_PREFIX}.Drawer`,Drawer.defaultProps={canOutsideClickClose:!0,isOpen:!1,style:{},vertical:!1},Drawer.SIZE_SMALL=DrawerSize.SMALL,Drawer.SIZE_STANDARD=DrawerSize.STANDARD,Drawer.SIZE_LARGE=DrawerSize.LARGE,Drawer=__decorate([polyfill],Drawer);export{Drawer};