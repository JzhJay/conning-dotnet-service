import classNames from"classnames";import*as React from"react";import{Boundary}from"../../common/boundary";import*as Classes from"../../common/classes";import*as Errors from"../../common/errors";import{Position}from"../../common/position";import{DISPLAYNAME_PREFIX}from"../../common/props";import{isElementOfType}from"../../common/utils";import{Menu}from"../menu/menu";import{MenuItem}from"../menu/menuItem";import{Popover}from"../popover/popover";export class CollapsibleList extends React.Component{render(){const{collapseFrom:e}=this.props,o=React.Children.count(this.props.children),[s,r]=this.partitionChildren(),t=s.map(((s,r)=>{const t=e===Boundary.START?o-1-r:r;return React.createElement("li",{className:this.props.visibleItemClassName,key:t},this.props.visibleItemRenderer(s.props,t))}));let i;if(e===Boundary.START&&t.reverse(),r.length>0){const o=e===Boundary.END?Position.BOTTOM_RIGHT:Position.BOTTOM_LEFT;i=React.createElement("li",{className:this.props.visibleItemClassName},React.createElement(Popover,Object.assign({content:React.createElement(Menu,null,r),position:o},this.props.dropdownProps),this.props.dropdownTarget))}return React.createElement("ul",{className:classNames(Classes.COLLAPSIBLE_LIST,this.props.className)},e===Boundary.START?i:null,t,e===Boundary.END?i:null)}partitionChildren(){const e=React.Children.map(this.props.children,((e,o)=>{if(!isElementOfType(e,MenuItem))throw new Error(Errors.COLLAPSIBLE_LIST_INVALID_CHILD);return React.cloneElement(e,{key:`visible-${o}`})}));if(null==e)return[[],[]];this.props.collapseFrom===Boundary.START&&e.reverse();const{visibleItemCount:o}=this.props;return[e.slice(0,o),e.slice(o)]}}CollapsibleList.displayName=`${DISPLAYNAME_PREFIX}.CollapsibleList`,CollapsibleList.defaultProps={collapseFrom:Boundary.START,visibleItemCount:3};