var Toaster_1;import{__decorate}from"tslib";import classNames from"classnames";import*as React from"react";import*as ReactDOM from"react-dom";import{polyfill}from"react-lifecycles-compat";import{AbstractPureComponent2,Classes,Position}from"../../common";import{TOASTER_CREATE_NULL,TOASTER_MAX_TOASTS_INVALID,TOASTER_WARN_INLINE}from"../../common/errors";import{ESCAPE}from"../../common/keys";import{DISPLAYNAME_PREFIX}from"../../common/props";import{isNodeEnv}from"../../common/utils";import{Overlay}from"../overlay/overlay";import{Toast}from"./toast";let Toaster=Toaster_1=class extends AbstractPureComponent2{constructor(){super(...arguments),this.state={toasts:[]},this.toastId=0,this.renderToast=s=>React.createElement(Toast,Object.assign({},s,{onDismiss:this.getDismissHandler(s)})),this.getDismissHandler=s=>t=>{this.dismiss(s.key,t)},this.handleClose=s=>{s.which===ESCAPE&&this.clear()}}static create(s,t=document.body){null==s||null==s.usePortal||isNodeEnv("production")||console.warn(TOASTER_WARN_INLINE);const e=document.createElement("div");t.appendChild(e);const o=ReactDOM.render(React.createElement(Toaster_1,Object.assign({},s,{usePortal:!1})),e);if(null==o)throw new Error(TOASTER_CREATE_NULL);return o}show(s,t){this.props.maxToasts&&this.dismissIfAtLimit();const e=this.createToastOptions(s,t);return void 0===t||this.isNewToastKey(t)?this.setState((s=>({toasts:[e,...s.toasts]}))):this.setState((s=>({toasts:s.toasts.map((s=>s.key===t?e:s))}))),e.key}dismiss(s,t=!1){this.setState((({toasts:e})=>({toasts:e.filter((e=>{const o=e.key===s;return o&&e.onDismiss?.(t),!o}))})))}clear(){this.state.toasts.forEach((s=>s.onDismiss?.(!1))),this.setState({toasts:[]})}getToasts(){return this.state.toasts}render(){const s=classNames(Classes.TOAST_CONTAINER,this.getPositionClasses(),this.props.className);return React.createElement(Overlay,{autoFocus:this.props.autoFocus,canEscapeKeyClose:this.props.canEscapeKeyClear,canOutsideClickClose:!1,className:s,enforceFocus:!1,hasBackdrop:!1,isOpen:this.state.toasts.length>0||null!=this.props.children,onClose:this.handleClose,shouldReturnFocusOnClose:!1,transitionDuration:350,transitionName:Classes.TOAST,usePortal:this.props.usePortal},this.state.toasts.map(this.renderToast,this),this.props.children)}validateProps({maxToasts:s}){if(void 0!==s&&s<1)throw new Error(TOASTER_MAX_TOASTS_INVALID)}isNewToastKey(s){return this.state.toasts.every((t=>t.key!==s))}dismissIfAtLimit(){this.state.toasts.length===this.props.maxToasts&&this.dismiss(this.state.toasts[this.state.toasts.length-1].key)}createToastOptions(s,t="toast-"+this.toastId++){return{...s,key:t}}getPositionClasses(){return[...this.props.position.split("-").map((s=>`${Classes.TOAST_CONTAINER}-${s.toLowerCase()}`)),`${Classes.TOAST_CONTAINER}-${this.props.usePortal?"in-portal":"inline"}`]}};Toaster.displayName=`${DISPLAYNAME_PREFIX}.Toaster`,Toaster.defaultProps={autoFocus:!1,canEscapeKeyClear:!0,position:Position.TOP,usePortal:!0},Toaster=Toaster_1=__decorate([polyfill],Toaster);export{Toaster};export const OverlayToaster=Toaster;