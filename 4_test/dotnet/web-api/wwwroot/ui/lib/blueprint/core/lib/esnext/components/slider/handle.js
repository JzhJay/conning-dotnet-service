import{__decorate}from"tslib";import classNames from"classnames";import*as React from"react";import{polyfill}from"react-lifecycles-compat";import{AbstractPureComponent2,Classes,Keys}from"../../common";import{DISPLAYNAME_PREFIX}from"../../common/props";import{clamp}from"../../common/utils";import{formatPercentage}from"./sliderUtils";const NUMBER_PROPS=["max","min","stepSize","tickSize","value"];let Handle=class extends AbstractPureComponent2{constructor(){super(...arguments),this.state={isMoving:!1},this.handleElement=null,this.refHandlers={handle:e=>this.handleElement=e},this.beginHandleMovement=e=>{document.addEventListener("mousemove",this.handleHandleMovement),document.addEventListener("mouseup",this.endHandleMovement),this.setState({isMoving:!0}),this.changeValue(this.clientToValue(this.mouseEventClientOffset(e)))},this.beginHandleTouchMovement=e=>{document.addEventListener("touchmove",this.handleHandleTouchMovement),document.addEventListener("touchend",this.endHandleTouchMovement),document.addEventListener("touchcancel",this.endHandleTouchMovement),this.setState({isMoving:!0}),this.changeValue(this.clientToValue(this.touchEventClientOffset(e)))},this.getStyleProperties=()=>{if(null==this.handleElement)return{};const{min:e=0,tickSizeRatio:t,value:n,vertical:s}=this.props,{handleMidpoint:i}=this.getHandleMidpointAndOffset(this.handleElement,!0),o=`calc(${formatPercentage((n-e)*t)} - ${i}px)`;return s?{bottom:o}:{left:o}},this.endHandleMovement=e=>{this.handleMoveEndedAt(this.mouseEventClientOffset(e))},this.endHandleTouchMovement=e=>{this.handleMoveEndedAt(this.touchEventClientOffset(e))},this.handleMoveEndedAt=e=>{this.removeDocumentEventListeners(),this.setState({isMoving:!1});const t=this.changeValue(this.clientToValue(e));this.props.onRelease?.(t)},this.handleHandleMovement=e=>{this.handleMovedTo(this.mouseEventClientOffset(e))},this.handleHandleTouchMovement=e=>{this.handleMovedTo(this.touchEventClientOffset(e))},this.handleMovedTo=e=>{this.state.isMoving&&!this.props.disabled&&this.changeValue(this.clientToValue(e))},this.handleKeyDown=e=>{const{stepSize:t,value:n}=this.props,{which:s}=e;s===Keys.ARROW_DOWN||s===Keys.ARROW_LEFT?(this.changeValue(n-t),e.preventDefault()):s!==Keys.ARROW_UP&&s!==Keys.ARROW_RIGHT||(this.changeValue(n+t),e.preventDefault())},this.handleKeyUp=e=>{[Keys.ARROW_UP,Keys.ARROW_DOWN,Keys.ARROW_LEFT,Keys.ARROW_RIGHT].indexOf(e.which)>=0&&this.props.onRelease?.(this.props.value)}}componentDidMount(){this.forceUpdate()}render(){const{className:e,disabled:t,label:n}=this.props,{isMoving:s}=this.state;return React.createElement("span",{className:classNames(Classes.SLIDER_HANDLE,{[Classes.ACTIVE]:s},e),onKeyDown:t?void 0:this.handleKeyDown,onKeyUp:t?void 0:this.handleKeyUp,onMouseDown:t?void 0:this.beginHandleMovement,onTouchStart:t?void 0:this.beginHandleTouchMovement,ref:this.refHandlers.handle,style:this.getStyleProperties(),tabIndex:0},null==n?null:React.createElement("span",{className:Classes.SLIDER_LABEL},n))}componentWillUnmount(){this.removeDocumentEventListeners()}clientToValue(e){const{stepSize:t,tickSize:n,value:s,vertical:i}=this.props;if(null==this.handleElement)return s;const o=(i?window.innerHeight-e:e)-this.getHandleElementCenterPixel(this.handleElement);return isNaN(o)?s:s+Math.round(o/(n*t))*t}mouseEventClientOffset(e){return this.props.vertical?e.clientY:e.clientX}touchEventClientOffset(e){const t=e.changedTouches[0];return this.props.vertical?t.clientY:t.clientX}validateProps(e){for(const t of NUMBER_PROPS)if("number"!=typeof e[t])throw new Error(`[Blueprint] <Handle> requires number value for ${t} prop`)}changeValue(e,t=this.props.onChange){return e=this.clamp(e),isNaN(e)||this.props.value===e||t?.(e),e}clamp(e){return clamp(e,this.props.min,this.props.max)}getHandleElementCenterPixel(e){const{handleMidpoint:t,handleOffset:n}=this.getHandleMidpointAndOffset(e);return n+t}getHandleMidpointAndOffset(e,t=!1){if(null==e)return{handleMidpoint:0,handleOffset:0};const{vertical:n}=this.props,s=e.getBoundingClientRect(),i=n?t?"width":"height":t?"height":"width",o=n?window.innerHeight-(s.top+s[i]):s.left;return{handleMidpoint:s[i]/2,handleOffset:o}}removeDocumentEventListeners(){document.removeEventListener("mousemove",this.handleHandleMovement),document.removeEventListener("mouseup",this.endHandleMovement),document.removeEventListener("touchmove",this.handleHandleTouchMovement),document.removeEventListener("touchend",this.endHandleTouchMovement),document.removeEventListener("touchcancel",this.endHandleTouchMovement)}};Handle.displayName=`${DISPLAYNAME_PREFIX}.SliderHandle`,Handle=__decorate([polyfill],Handle);export{Handle};