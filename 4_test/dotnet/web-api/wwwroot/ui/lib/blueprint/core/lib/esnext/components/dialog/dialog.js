import{__decorate}from"tslib";import classNames from"classnames";import*as React from"react";import{polyfill}from"react-lifecycles-compat";import{AbstractPureComponent2,Classes}from"../../common";import*as Errors from"../../common/errors";import{DISPLAYNAME_PREFIX}from"../../common/props";import{uniqueId}from"../../common/utils";import{Button}from"../button/buttons";import{H4}from"../html/html";import{Icon,IconSize}from"../icon/icon";import{Overlay}from"../overlay/overlay";let Dialog=class extends AbstractPureComponent2{constructor(e){super(e);const o=uniqueId("bp-dialog");this.titleId=`title-${o}`}render(){return React.createElement(Overlay,Object.assign({},this.props,{className:Classes.OVERLAY_SCROLL_CONTAINER,hasBackdrop:!0}),React.createElement("div",{className:Classes.DIALOG_CONTAINER},React.createElement("div",{className:classNames(Classes.DIALOG,this.props.className),role:"dialog","aria-labelledby":this.props["aria-labelledby"]||(this.props.title?this.titleId:void 0),"aria-describedby":this.props["aria-describedby"],style:this.props.style},this.maybeRenderHeader(),this.props.children)))}validateProps(e){null==e.title&&(null!=e.icon&&console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON),null!=e.isCloseButtonShown&&console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON))}maybeRenderCloseButton(){return!1!==this.props.isCloseButtonShown?React.createElement(Button,{"aria-label":"Close",className:Classes.DIALOG_CLOSE_BUTTON,icon:React.createElement(Icon,{icon:"small-cross",size:IconSize.LARGE}),minimal:!0,onClick:this.props.onClose}):void 0}maybeRenderHeader(){const{icon:e,title:o}=this.props;if(null!=o)return React.createElement("div",{className:Classes.DIALOG_HEADER},React.createElement(Icon,{icon:e,size:IconSize.LARGE}),React.createElement(H4,{id:this.titleId},o),this.maybeRenderCloseButton())}};Dialog.defaultProps={canOutsideClickClose:!0,isOpen:!1},Dialog.displayName=`${DISPLAYNAME_PREFIX}.Dialog`,Dialog=__decorate([polyfill],Dialog);export{Dialog};