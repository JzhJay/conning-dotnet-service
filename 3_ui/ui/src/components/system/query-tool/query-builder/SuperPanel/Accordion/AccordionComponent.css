.accordion-toolbar {
    composes:    row from '../../styles/row.css';
    --row-height: 26px;


    border:      0;
    background:  var(--axis-background-color);
    color:       var(--axis-foreground-color);
    font-family: var(--mono-space-font-family);
    font-weight: bold;

    button {
        color: var(--axis-foreground-color) !important;
    }

    .noExtraLabel {

    }

    .header-text-tooltip {
        flex:1;
        align-self: center;
    }

    .header-text {
        -webkit-font-smoothing: antialiased;
        font-size:              15px;
        cursor:                 pointer;
        flex:                   1 0 auto;
        min-width:              12em;
        align-self:             center;

        &.prevent-click {
            cursor: default;
        }
    }

    input[type=checkbox] {
        cursor:     pointer;
        align-self: center;
        flex-grow:  0;
    }

    .expand-collapse {
        transition: transform 600ms ease;

        &.collapsed {
            transform: rotateX(180deg);
        }
    }

}

.accordion-value {
    composes:     row from '../../styles/row.css';
    --row-height: 26px;
    display:      flex;
    white-space:  nowrap;
    align-self:   center;
    opacity:      1;
    font-size:    11pt;
    cursor:       default;
    user-select:  none;
    position:     relative;
    will-change:  transform;
    background:   var(--coordinate-background-color);
    color:        var(--coordinate-foreground-color);
    font-family:  var(--mono-space-font-family);
    border-width: 0 0px 1px 0;
    border-color: var(--axis-background-color);
    border-style: solid;

    &:hover {
        svg:not(:global(.bp3-icon)) {
            opacity:1;
        }
     }

    svg:not(:global(.bp3-icon)) {
        transition: opacity .6s ease;
        opacity: 0;
        margin-right: 3px;
    }

    &:focus {
        outline: none;
        /*  outline-color: -webkit-focus-ring-color;
			outline-style: auto;
			outline-width: 5px;*/
    }

    :global(.bp3-popover-target) {
        width:100%;
    }

    > span {
        width:100%;
    }

    &.focused {
        &:after {
            content:        '';
            position:       absolute;
            top:            1px;
            left:           1px;
            pointer-events: none;
            width:          calc(100% - 2px);
            height:         calc(100% - 2px);
            border:         1px dashed black !important;
        }
        outline: none;
    }

    &.unavailable {
        label {
            color:      var(--coordinate-unavailable-foreground);
            font-style: italic;
        }
    }

    label, span {
        user-select:    none;
        flex:           0 0 auto;
        vertical-align: middle;
        margin:         auto 0;
        vertical-align: middle;
        align-self: center;
    }

    &.no-checkbox {
        > label, > span {
            margin-left: var(--row-padding);
        }
    }

    &.highlighted {
        /*&:before {*/
        /*pointer-events:   none; !* Otherwise we block access to the checkbox *!*/
        /*content:          '';*/
        /*display:          block;*/
        /*z-index:          10;*/
        /*left:             0;*/
        /*top:              0;*/
        /*opacity:          .4;*/
        /*background-color: var(--selected-background);*/
        /*position:         absolute;*/
        /*width:            100%;*/
        /*height:           100%;*/
        /*}*/
        background-color: var(--selected-background);
    }

    &:first-of-type {
        border-top-width: 0px;
    }

    input[type=checkbox] {
        padding: 0 .5em 0 0;
    }

    /*
    input[type=checkbox] {
        padding: 0 .5em 0 0;
        appearance:none;
        background-color: #fafafa;
        border: 1px solid #cacece;
        box-shadow: 0 1px 2px rgba(0,0,0,0.05), inset 0px -15px 10px -12px rgba(0,0,0,0.05);
        border-radius: 3px;
        display: inline-block;
        position: relative;

        &:active, &:checked:active {
            box-shadow: 0 1px 2px rgba(0,0,0,0.05), inset 0px 1px 3px rgba(0,0,0,0.1);
        }

        &:checked {
            background-color: #e9ecee;
            border: 1px solid #adb8c0;
            box-shadow: 0 1px 2px rgba(0,0,0,0.05), inset 0px -15px 10px -12px rgba(0,0,0,0.05), inset 15px 10px -12px rgba(255,255,255,0.1);
            color: #99a1a7;
        }

        &:checked:after {
            content: '\2714';
            font-size: 14px;
            position: absolute;
            top: 0px;
            left: 3px;
            color: #99a1a7;
        }
    }
     */
}

.accordion {
    :root {
        --accordion-searcher-height:  30px;
        --accordion-header-font-size: 13pt;
        --accordion-header-height:    32px;
        --accordion-arrow-color:      black;
    }

    flex:           0 0 auto;
    display:        flex;
    flex-direction: column;
    will-change:    transform;
    width:          100%;
    border:         var(--axis-border);
    margin-top:     3px;

    &:first-child {
        margin-top: 0;
    }

    &:focus {
        outline: none;
    }

    /* &.focused .header, */
    &.collapsed.focused [role="tab"] {
        background: var(--accordion-focused-header-background);
        color:      var(--accordion-focused-header-foreground);
    }

    &.is-only-available-item-selected, &.unavailable {
        .header {
            .header-text {
                font-style: italic;
            }
        }
    }

    transition:     background-color ease 500ms;

    .values-panel {
        flex:             1;
        overflow:         hidden;
        background-color: var(--axis-background-color);
        padding-left:     20px;
        border: 1px solid black;
        border-top: 0;

        &:not(:global(.scenarios)) .values {
            overflow-y: hidden !important;
            flex:       1;
        }

        .values {
            :global .Grid__cell:focus {
                outline: none;
            }

            &.unavailable {
                font-style: italic;
            }
        }
    }

    &:first-of-type {
        .header {
            border-top: 0px;
        }
    }

    &.collapsed {

        /* border-bottom: 1px solid var(--super-panel-background-color); */

        .header {
            border-bottom: 1px solid
        }
        .values-panel {
            border:  0;
            display: flex;
        }
    }

    &.layout-horizontally {
        min-width:  275px;
        width:      auto;
        height:     fit-content;
        max-height: 100%;
        margin-top: 0px;
        padding:    3px;

        .values-panel {
            overflow-y: auto;

            .values {
                overflow-y:     auto !important;
                height:         100%;
                padding-right:  20px;
            }
        }
    }
}

[data-part="variables"] {
    :global .no-selected-values {
        :local .accordion:not(.no-available-values-selected) {
            transition:     filter 400ms;
            pointer-events: none;
            filter:         blur(2px);
        }
    }
}

[data-part="statistics"] {
    .pane.focused .accordion-value.selected {
        background-color: inherit;
    }
}

[data-part="scenarios"] {
    .accordion {
        flex-grow: 1;
    }

    .values-panel {
        padding: 0;
    }

    :global(.resize-triggers)>div {
        overflow: hidden !important; /* The overflow:auto property on the React Virtualized AutoScroll resizer trigger causes Arrangement panel Drag and Drop to crawl to a halt so remove it!*/
    }
}

.accordion-context-menu {

}

@keyframes attract-user-attention {
    0% {
        background-color: white;
        opacity:          1;
    }
    50% {
        background-color: Yellow;
    }
    100% {
        background-color: white;
    }
}

accordion.attract-user-attention .header, .accordion-value.attract-user-attention {
    /*background-color: var(--user-attention-background-color);*/
    animation:                 attract-user-attention;
    animation-duration:        500ms;
    animation-iteration-count: 2;
}

/*  This code was to make expand/collapse toolbar buttons for the panel line up with accordion expand/collapse
[data-part="variables"] > ul > *:not(:only-child) .accordion-toolbar :global(.ui.buttons){
    padding-right:19px;
}*/

coord-tooltip-icon {
    margin-right:.5em;
    color:white;
}

.coord-tooltip {
    max-width:250px;

    :global .bp3-popover-content {
        padding:5px;
        font-size:11pt;
        white-space: pre-line;
    }
}
