.root {
    flex-direction: row !important;
    overflow: hidden;
    /*width: 100vw;*/

    .hide-page {
       display: none !important;
    }

    .page-cache {
        display: flex;
        flex: 1;
        width: 100%;
    }

    .page {
        display: flex;
        flex-direction: column;
        width: 100%;
        background-color: white;

        .page-loader {
            position: relative;
        }

        .page-title {
            display: flex;
            justify-content: center;
            font-size: 20px;
            /*padding: 10px;*/
            height: 45px;
            border-bottom: 1px solid black;
            background-color: white;
            transition: height 500ms ease-in-out;
            overflow: hidden;

            input {
                display: flex;
                flex: 1;
                border: 0px;
                text-align: center;
                line-height: unset; /*Override semantic default which causes "g" to be clipped*/
            }

            input:focus {
                border: 1px solid lightgray;
            }

            &.page-title-enter {
                height: 0px;
            }

            &.page-title-enter-active, &.page-title-enter-done {
                height: 45px;
            }

            &.page-title-exit {
                height: 45px;
            }

            &.page-title-exit-active, &.page-title-exit-done {
                height: 0px;
            }
        }

        .show-navigation {
            margin:           0px 10px;
        }
    }

    .views {
        display: flex;
        /*width: 100vw;*/
        flex:1;
        flex-direction: column;
        overflow: hidden;
        background-color: white;

        &.allow-scroll {
            display: block;
            overflow-y: scroll;
            overflow-x: auto;

            .view {
                overflow-x: auto;
            }
        }
    }

    .view {
        display: flex;
        flex:1;
        overflow: hidden;
        /*justify-content: center; -- breaks horizontal scrolling*/

        & > span {
            font-size: 50px;
            overflow: hidden;
            align-self: center;
        }

        &:not(:first-child) :global(.bp3-navbar) {
             border-top: 1px solid black;
        }

        :global(.ui.dimmer) {
            position: relative;
            flex: 1;
            top: auto;
            left: auto;
            //width: auto;
            height: auto;
            background-color: white;
            min-height: 200px;
        }

        .no-data {
            display: flex;
            flex: 1;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            font-size: 50px;
        }
    }

    :global(.bp3-navbar) {
        transition: 500ms opacity ease;
    }

    .hide-toolbars :global(.bp3-navbar) {
        opacity: 0;
        pointer-events: none;
    }

    .hover-toolbars {

        :global(.bp3-navbar) {
            opacity: 0;
            pointer-events: none;
            transition-delay: 1500ms;
        }

        :hover :global(.bp3-navbar) {
            pointer-events: auto;
        }

        :global(.bp3-navbar:hover) {
            opacity: 1;
            transition-delay: 350ms;
        }

        &.popover-opened :global(.bp3-navbar) {
             opacity: 1;
         }

    }

    /*
    .view-enter {
        animation: flexGrow 1s ease forwards;
        transition: all 1s;
    }

    .view-enter-done {
    }

    .view-exit {
        animation: flexShrink 1s ease forwards;
        transition: all 1s;
        height: 0px !important;
    }*/

    .loading {
        margin: auto;
    }
}

.root-enter, .root-appear {
    transform: translate(100%);
    flex: unset !important;
}

.root-enter.root-enter-active , .root-appear.root-appear-active {
    transform: translate(0%);
    transition: transform 500ms ease-in-out;
    overflow: visible !important;
}

.root-exit {
    position: absolute;
    width: 100%;
    height: 100%;
    transform: translate(0%);
    flex: unset !important;

    .views {
        overflow-y: hidden !important;
    }
}

.root-exit.root-exit-active {
    transform: translate(-100%);
    transition: transform 500ms ease-in-out;
    overflow: visible !important;
}

.root.from-left {
    overflow: hidden;

    .root-enter, .root-appear {
        transform: translate(-100%);
    }

    .root-enter.root-enter-active, .root-appear.root-appear-active {
        transform: translate(0%);
    }

    .root-exit {
        transform: translate(0%);
    }

    .root-exit.root-exit-active {
        transform: translate(100%);
    }
}

.navigation-overlay {
    position: absolute;
    z-index: 1001;
    background-color: rgba(255, 255, 255, .4) !important;
    top: 50%;
    pointer-events: none;

    a {
        pointer-events: all;
    }

    svg {
        height: 50px;
        width: 50px;
        color: black !important;
    }
}

.navigation-overlay[data-direction=right] {
     right: 0px;
 }


/*
Workaround Chrome bug that triggers hover on siblings while dragging
https://github.com/react-dnd/react-dnd/issues/476
*/
:global {
    .sortable-ghost {
        background-color: rgba(167, 182, 194, 0.3) !important;
    }

    .is-dragging {
        :not(.sortable-ghost)  {
            .bp3-menu-item {
                background-color: white !important;
            }
        }

        .bp3-menu-item-label button {
            background-color: white !important;
            opacity: 0 !important;
        }
    }
}

@keyframes flexGrow {
    from {
        flex: .00001;
    }

    to {
        flex: 1;
    }
}

@keyframes flexShrink {
    from {
        flex: 1;
    }
    to {
        flex: .00001;
    }
}