####################################################################
# WhiteSource FS-Agent configuration file
####################################################################
##########################################
# GENERAL SCAN MODE: Files and Package Managers
##########################################

log.level=debug
checkPolicies=true
forceCheckAllDependencies=true
forceUpdate=true
forceUpdate.failBuildOnPolicyViolation=true
generateScanReport=true

# Set up offline mode.  Output file should be whitesource/update-request.txt
#offline=false
#offline.zip=true
offline.prettyJson=true

#d=/ADVISE
#ignoreSourceFiles=true
#ignoreCertificateCheck=
#scanComment=
#updateInventory=false

#projectPerFolder=true
#projectPerFolderIncludes=
#projectPerFolderExcludes=

#wss.connectionTimeoutMinutes=60
# Change the below URL to your WhiteSource server.
# Use the 'WhiteSource Server URL' which can be retrieved
# from your 'Profile' page on the 'Server URLs' panel.
# Then, add the '/agent' path to it.
wss.url=https://app.whitesourcesoftware.com/agent

#npm.resolveDependencies=false
npm.ignoreSourceFiles=false
npm.runPreStep=false
npm.includeDevDependencies=true
#npm.runPreStep=true
#npm.ignoreNpmLsErrors=true
#npm.ignoreScripts=true
npm.yarnProject=true

bower.resolveDependencies=false
#bower.ignoreSourceFiles=true
#bower.runPreStep=true

nuget.resolveDependencies=false
#nuget.restoreDependencies=true
#nuget.ignoreSourceFiles=true
#nuget.runPreStep=true

python.resolveDependencies=false
python.ignoreSourceFiles=false
#python.ignorePipInstallErrors=true
#python.installVirtualenv=true
python.resolveHierarchyTree=false
#python.requirementsFileIncludes=requirements.txt
#python.resolveSetupPyFiles=true
#python.runPipenvPreStep=true
#python.pipenvDevDependencies=true
#python.IgnorePipenvInstallErrors=true

#maven.ignoredScopes=test provided
maven.resolveDependencies=false
#maven.ignoreSourceFiles=true
#maven.aggregateModules=true
maven.ignorePomModules=false
#maven.runPreStep=true
#maven.ignoreMvnTreeErrors=true

#gradle.ignoredScopes=
gradle.resolveDependencies=false
gradle.runAssembleCommand=false
#gradle.runPreStep=true
#gradle.ignoreSourceFiles=true
#gradle.aggregateModules=true
#gradle.preferredEnvironment=wrapper
#gradle.runPreStep=true

paket.resolveDependencies=false
#paket.ignoredGroups=
paket.ignoreSourceFiles=false
#paket.runPreStep=true
#paket.exePath=

go.resolveDependencies=false
#go.collectDependenciesAtRuntime=true
#go.dependencyManager=
#go.ignoreSourceFiles=true
go.glide.ignoreTestPackages=false
#go.gogradle.enableTaskAlias=true

ruby.resolveDependencies = false
ruby.ignoreSourceFiles = false
#ruby.installMissingGems = true
#ruby.runBundleInstall = true
#ruby.overwriteGemFile = true

sbt.resolveDependencies=false
#sbt.ignoreSourceFiles=true
#sbt.aggregateModules=true
#sbt.runPreStep=true
#sbt.targetFolder=

php.resolveDependencies=false
#php.runPreStep=true
#php.includeDevDependencies=true

html.resolveDependencies=false

cocoapods.resolveDependencies=false
#cocoapods.runPreStep=true
cocoapods.ignoreSourceFiles=false

##################################
# Organization tokens:
##################################
apiKey=a8754f56ea5f4a55bd27baaec2402ecf219a0cfe777a4deba7e6b2b322b907a6

#userKey is required if WhiteSource administrator has enabled "Enforce user level access" option
#userKey=

#projectName=AdviseJulia
#projectVersion=
#projectToken=

projectName=AdviseWebKui
projectVersion=
projectToken=


productName=Advise
productVersion=
productToken=
#updateType=APPEND
requesterEmail=rashaine.johnson@conning.com

#########################################################################################
# Includes/Excludes Glob patterns - PLEASE USE ONLY ONE EXCLUDE LINE AND ONE INCLUDE LINE
#########################################################################################
includes=**/*.c **/*.cc **/*.cp **/*.cpp **/*.cxx **/*.c++ **/*.h **/*.hpp **/*.hxx **/*.jl **/*.dll **/*.cs **/*.jl  **/*.js  **/*.ts  **/*.tsx  **/*.jar **/*.py **/*.zip

#includes=**/*.m **/*.mm  **/*.js **/*.php
#includes=**/*.jar
#includes=**/*.gem **/*.rb
#includes=**/*.dll **/*.cs **/*.nupkg
#includes=**/*.tgz **/*.deb **/*.gzip **/*.rpm **/*.tar.bz2
#includes=**/*.zip **/*.tar.gz **/*.egg **/*.whl **/*.py

## Exclude file extensions or specific directories by adding **/*.<extension> or **<excluded_dir>/**
excludes=**/*sources.jar **/*javadoc.jar **/whitesource* **/wss-unified-agent.jar **/dotnet/libs/graphql-dotnet/package.json **/dotnet/libs/graphql-dotnet/docs/package.json **/dotnet/libs/graphql-dotnet/docs2/package.json

case.sensitive.glob=false
followSymbolicLinks=true

##################################
# Archive Properties
##################################
#archiveExtractionDepth=7
#archiveIncludes=**/*.war **/*.ear
#archiveExcludes=**/*sources.jar

##################################
# Proxy settings
##################################
#proxy.host=
#proxy.port=
#proxy.user=
#proxy.pass=

##################################
# SCM settings
##################################
#scm.type=
#scm.user=
#scm.pass=
#scm.ppk=
#scm.url=
#scm.branch=
#scm.tag=
#scm.npmInstall=
#scm.npmInstallTimeoutMinutes=
#scm.repositoriesFile=

##############################################
# SCAN MODE: Linux package manager settings
##############################################
#scanPackageManager=true

##################################
# SCAN MODE: Docker images
##################################
#docker.includes=.*.*
#docker.excludes=.*.*
#docker.scanImages=true
#docker.pull.enable=true
#docker.pull.images=.*.*
#docker.pull.maxImages=10
#docker.pull.tags=.*.*
#docker.pull.digest=
#docker.delete.force=true
#docker.login.sudo=false

#docker.aws.enable=true
#docker.aws.registryIds=
